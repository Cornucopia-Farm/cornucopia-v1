/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../../common";
import type {
  SkinnyOptimisticOracle,
  SkinnyOptimisticOracleInterface,
} from "../../../../../../../../../lib/protocol/packages/core/contracts/optimistic-oracle/previous-versions/SkinnyOptimisticOracle.sol/SkinnyOptimisticOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_liveness",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_finderAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_timerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "DisputePrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "ProposePrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "RequestPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "Settle",
    type: "event",
  },
  {
    inputs: [],
    name: "ancillaryBytesLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultLiveness",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "disputePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "disputePriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finder",
    outputs: [
      {
        internalType: "contract FinderInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "getState",
    outputs: [
      {
        internalType: "enum OptimisticOracleInterface.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "hasPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "proposedPrice",
        type: "int256",
      },
    ],
    name: "proposePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "int256",
        name: "proposedPrice",
        type: "int256",
      },
    ],
    name: "proposePriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        internalType: "contract IERC20",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "customLiveness",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "int256",
        name: "proposedPrice",
        type: "int256",
      },
    ],
    name: "requestAndProposePriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        internalType: "contract IERC20",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "customLiveness",
        type: "uint256",
      },
    ],
    name: "requestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "setCurrentTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "settle",
    outputs: [
      {
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "resolvedPrice",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "stampAncillaryData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "timerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002e2d38038062002e2d833981016040819052620000349162000149565b60008054600160a01b6001600160a01b038481166001600160a81b03199093169290921717909155600280546001600160a01b0319169184169190911790556200007e8362000089565b50506003556200018a565b63bb7448008110620000d75760405162461bcd60e51b81526020600482015260126024820152714c6976656e65737320746f6f206c6172676560701b60448201526064015b60405180910390fd5b60008111620001295760405162461bcd60e51b815260206004820152601460248201527f4c6976656e6573732063616e6e6f7420626520300000000000000000000000006044820152606401620000ce565b50565b80516001600160a01b03811681146200014457600080fd5b919050565b6000806000606084860312156200015f57600080fd5b8351925062000171602085016200012c565b915062000181604085016200012c565b90509250925092565b612c93806200019a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a337e1ad116100a2578063b730539f11610071578063b730539f1461024d578063b9a3c84c14610275578063c371dda714610288578063d622840714610291578063fe4e1983146102a457600080fd5b8063a337e1ad146101e4578063af355d1e14610207578063af5d2f391461021a578063b1a166b21461023a57600080fd5b806351205554116100de578063512055541461017e57806393c44ef71461019e5780639ce320c8146101b15780639d866985146101c457600080fd5b80631c39c38d1461011057806322f8e5661461014057806329cb924d146101555780633a31577e1461016b575b600080fd5b600054610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e3660046122ef565b6102ad565b005b61015d610323565b604051908152602001610137565b61015d6101793660046124d7565b6103b4565b61019161018c3660046124d7565b6103d0565b604051610137919061256a565b61015d6101ac366004612592565b6103f9565b61015d6101bf366004612618565b610417565b61015d6101d23660046122ef565b60016020526000908152604090205481565b6101f76101f23660046124d7565b6107dc565b6040519015158152602001610137565b61015d6102153660046126aa565b610872565b61022d610228366004612750565b610dbd565b60405161013791906127f2565b61015d610248366004612805565b610dd2565b61026061025b3660046124d7565b611075565b60408051928352602083019190915201610137565b600254610123906001600160a01b031681565b61015d61200081565b61015d61029f3660046128a2565b6110ab565b61015d60035481565b6000546001600160a01b03166102c257600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561030857600080fd5b505af115801561031c573d6000803e3d6000fd5b5050505050565b600080546001600160a01b0316156103af5760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190612927565b905090565b504290565b60006103c485858585338b610417565b90505b95945050505050565b60006103da61148b565b6103e26114e6565b6103ef86868686866114f5565b90506103c7611609565b600061040a87878787873388610dd2565b90505b9695505050505050565b600061042161148b565b6104296114e6565b6001600160a01b0383166104845760405162461bcd60e51b815260206004820152601e60248201527f64697370757465722061646472657373206d757374206265206e6f6e2030000060448201526064015b60405180910390fd5b600261049383898989896114f5565b60068111156104a4576104a4612554565b146104e45760405162461bcd60e51b815260206004820152601060248201526f135d5cdd081899481c1c9bdc1bdcd95960821b604482015260640161047b565b60006104f28389898961161e565b90506104fe8186611658565b600060405180610160016040528087600001516001600160a01b03168152602001866001600160a01b0316815260200187604001516001600160a01b03168152602001876060015115158152602001876080015181526020018760a0015181526020018760c0015181526020018760e0015181526020018761010001518152602001876101200151815260200187610140015181525090506105a082826116e7565b6101008601516101208701516105b591611706565b925082156105d75760408601516105d7906001600160a01b0316333086611712565b60006105e1611783565b905060006105ee836117f9565b9050600061060a828a610100015161170690919063ffffffff16565b905080156106a857604089015161062b906001600160a01b0316848361180d565b610633611783565b60408a8101518151602081018352848152915163432ce91960e11b81526001600160a01b039182166004820152915160248301529190911690638659d23290604401600060405180830381600087803b15801561068f57600080fd5b505af11580156106a3573d6000803e3d6000fd5b505050505b50506106b26118bf565b6001600160a01b031663216666a48b8b6106cc8c8a6118f9565b6040518463ffffffff1660e01b81526004016106ea93929190612940565b600060405180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b5050505089856001600160a01b03167f2d2ed23d7d2e875b405c36213cc1668e3adf8b4d845653bd9f977c313d599ffe8b8b8660405161075a93929190612a06565b60405180910390a36001600160a01b0385163b156107d1576040516308dd6a0560e11b81526001600160a01b038616906311bad40a906107a4908d908d908d908890600401612a36565b600060405180830381600087803b1580156107be57600080fd5b505af19250505080156107cf575060015b505b50505061040d611609565b60006107e661148b565b6107ee6114e6565b60006107fc8787878761161e565b90506108088184611658565b600061081788888888886114f5565b9050600681600681111561082d5761082d612554565b148061084a5750600581600681111561084857610848612554565b145b806108665750600381600681111561086457610864612554565b145b925050506103c7611609565b600061087c61148b565b6108846114e6565b6000610892338c8c8c61161e565b600081815260016020526040902054909150156108f15760405162461bcd60e51b815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a65640000000000604482015260640161047b565b6001600160a01b0384166109475760405162461bcd60e51b815260206004820152601e60248201527f70726f706f7365722061646472657373206d757374206265206e6f6e20300000604482015260640161047b565b61094f611929565b6001600160a01b03166390978d1b8c6040518263ffffffff1660e01b815260040161097c91815260200190565b602060405180830381865afa158015610999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bd9190612a6c565b610a025760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161047b565b610a0a611970565b604051631d1d5b3960e11b81526001600160a01b038a811660048301529190911690633a3ab67290602401602060405180830381865afa158015610a52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a769190612a6c565b610ab95760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161047b565b610ac1610323565b8a63ffffffff161115610b0c5760405162461bcd60e51b815260206004820152601360248201527254696d657374616d7020696e2066757475726560681b604482015260640161047b565b612000610b198a336118f9565b511115610b625760405162461bcd60e51b8152602060048201526017602482015276416e63696c6c617279204461746120746f6f206c6f6e6760481b604482015260640161047b565b6000610b6c611783565b604051635b97aadd60e01b81526001600160a01b038b811660048301529190911690635b97aadd90602401602060405180830381865afa158015610bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd89190612a90565b519050610be3612278565b6001600160a01b038a16604082015260e0810189905261010081018290526000889003610c105781610c12565b875b61012082015261014081018790526001600160a01b038616815260808101859052610c576000889003610c4757600354610c49565b875b610c51610323565b90611706565b60c0820152610c6683826116e7565b8815610c8157610c816001600160a01b038b1633308c611712565b610100810151610120820151610c9691611706565b93508315610cb357610cb36001600160a01b038b16333087611712565b8c336001600160a01b03167f6f8b57987b901f40681c863d8aed32c2cc6150062aa4ddb828c89aaa896c16688e8e85604051610cf193929190612a06565b60405180910390a38c336001600160a01b03167fdb27b6b59f934dc351fe9188a12f94a06c3c867c683c6e65c7e2b4c8aa6e9a048e8e85604051610d3793929190612a06565b60405180910390a3333b15610da557336001600160a01b031663724f18148e8e8e856040518563ffffffff1660e01b8152600401610d789493929190612a36565b600060405180830381600087803b158015610d9257600080fd5b505af1925050508015610da3575060015b505b505050610db0611609565b9998505050505050505050565b6060610dc983836118f9565b90505b92915050565b6000610ddc61148b565b610de46114e6565b6001600160a01b038316610e3a5760405162461bcd60e51b815260206004820152601e60248201527f50726f706f7365722061646472657373206d757374206265206e6f6e20300000604482015260640161047b565b6001610e4989898989896114f5565b6006811115610e5a57610e5a612554565b14610e9b5760405162461bcd60e51b8152602060048201526011602482015270135d5cdd081899481c995c5d595cdd1959607a1b604482015260640161047b565b6000610ea98989898961161e565b9050610eb58186611658565b6000604051806101600160405280866001600160a01b0316815260200187602001516001600160a01b0316815260200187604001516001600160a01b031681526020018760600151151581526020018581526020018760a001518152602001610f3a886101400151600003610f2c57600354610c49565b886101400151610c51610323565b81526020018760e001518152602001876101000151815260200187610120015181526020018761014001518152509050610f7482826116e7565b610100860151610120870151610f8991611706565b92508215610fab576040860151610fab906001600160a01b0316333086611712565b888a6001600160a01b03167fdb27b6b59f934dc351fe9188a12f94a06c3c867c683c6e65c7e2b4c8aa6e9a048a8a85604051610fe993929190612a06565b60405180910390a36001600160a01b038a163b1561106057604051631c93c60560e21b81526001600160a01b038b169063724f181490611033908c908c908c908790600401612a36565b600060405180830381600087803b15801561104d57600080fd5b505af192505050801561105e575060015b505b505061106a611609565b979650505050505050565b60008061108061148b565b6110886114e6565b61109587878787876119b7565b915091506110a1611609565b9550959350505050565b60006110b561148b565b6110bd6114e6565b60006110cb338a8a8a61161e565b6000818152600160205260409020549091501561112a5760405162461bcd60e51b815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a65640000000000604482015260640161047b565b611132611929565b6001600160a01b03166390978d1b8a6040518263ffffffff1660e01b815260040161115f91815260200190565b602060405180830381865afa15801561117c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a09190612a6c565b6111e55760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b604482015260640161047b565b6111ed611970565b604051631d1d5b3960e11b81526001600160a01b0388811660048301529190911690633a3ab67290602401602060405180830381865afa158015611235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112599190612a6c565b61129c5760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b604482015260640161047b565b6112a4610323565b8863ffffffff1611156112ef5760405162461bcd60e51b815260206004820152601360248201527254696d657374616d7020696e2066757475726560681b604482015260640161047b565b6120006112fc88336118f9565b5111156113455760405162461bcd60e51b8152602060048201526017602482015276416e63696c6c617279204461746120746f6f206c6f6e6760481b604482015260640161047b565b600061134f611783565b604051635b97aadd60e01b81526001600160a01b0389811660048301529190911690635b97aadd90602401602060405180830381865afa158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb9190612a90565b5190506113c6612278565b6001600160a01b038816604082015260e08101879052610100810182905260008690036113f357816113f5565b855b610120820152610140810185905261140d83826116e7565b8615611428576114286001600160a01b03891633308a611712565b8a336001600160a01b03167f6f8b57987b901f40681c863d8aed32c2cc6150062aa4ddb828c89aaa896c16688c8c8560405161146693929190612a06565b60405180910390a361012081015161147e9083611706565b935050505061106a611609565b600054600160a01b900460ff166114e45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161047b565b565b6000805460ff60a01b19169055565b60408101516000906001600160a01b0316611512575060006103c7565b81516001600160a01b0316611529575060016103c7565b81606001511561153b575060066103c7565b60208201516001600160a01b031661157157611555610323565b8260c00151111561156757600261156a565b60035b90506103c7565b6115796118bf565b6001600160a01b031663b551cd508686611593878b6118f9565b6040518463ffffffff1660e01b81526004016115b193929190612940565b602060405180830381865afa1580156115ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f29190612a6c565b6115fd5760046103c4565b50600595945050505050565b6000805460ff60a01b1916600160a01b179055565b6000848484846040516020016116379493929190612ad2565b6040516020818303038152906040528051906020012090505b949350505050565b61166181611d1e565b600083815260016020526040902054146116e35760405162461bcd60e51b815260206004820152603860248201527f486173686564207265717565737420706172616d7320646f206e6f74206d617460448201527f6368206578697374696e67207265717565737420686173680000000000000000606482015260840161047b565b5050565b6116f081611d1e565b6000928352600160205260409092209190915550565b6000610dc98284612b1b565b6040516001600160a01b038085166024830152831660448201526064810182905261177d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611d4e565b50505050565b6002546040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa1580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190612b2e565b610120810151600090610dcc906002611e25565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa15801561185e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118829190612927565b61188c9190612b1b565b6040516001600160a01b03851660248201526044810182905290915061177d90859063095ea7b360e01b90606401611746565b6002546040516302abf57960e61b8152654f7261636c6560d01b60048201526000916001600160a01b03169063aafd5e40906024016117b8565b6060610dc9836040518060400160405280600b81526020016a37b7a932b8bab2b9ba32b960a91b81525084611e31565b6002546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e40906024016117b8565b6002546040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e40906024016117b8565b60008060006119c88888888861161e565b90506119d48185611658565b600060405180610160016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b03168152602001600115158152602001866080015181526020018660a0015181526020018660c0015181526020018660e0015181526020018661010001518152602001866101200151815260200186610140015181525090506000611a7c8a8a8a8a8a6114f5565b90506003816006811115611a9257611a92612554565b03611ae757608086015160a0830181905260e0870151610100880151610120890151929650611ac492610c5191611706565b86516040880151919650611ae2916001600160a01b03169087611e77565b611c52565b6005816006811115611afb57611afb612554565b03611c0057611b086118bf565b6001600160a01b031663719c6d568a8a611b228b8f6118f9565b6040518463ffffffff1660e01b8152600401611b4093929190612940565b602060405180830381865afa158015611b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b819190612927565b60a08301819052608087015160e08801516101008901519296509086141591611bce9190610c519081611bc2611bb6896117f9565b6101208e015190611ea7565b6101208d015190611706565b9550611bfa81611bdf578751611be5565b87602001515b60408901516001600160a01b03169088611e77565b50611c52565b60405162461bcd60e51b815260206004820152602160248201527f416c726561647920736574746c6564206f72206e6f7420736574746c6561626c6044820152606560f81b606482015260840161047b565b611c5c83836116e7565b888a6001600160a01b03167f0a9a88a76857159cb49d0944fe45537825a67ea75e0df805097782be5bdcd0af8a8a86604051611c9a93929190612a06565b60405180910390a36001600160a01b038a163b15611d115760405163413f3f9f60e11b81526001600160a01b038b169063827e7f3e90611ce4908c908c908c908890600401612a36565b600060405180830381600087803b158015611cfe57600080fd5b505af1925050508015611d0f575060015b505b5050509550959350505050565b600081604051602001611d319190612b4b565b604051602081830303815290604052805190602001209050919050565b6000611da3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611eb39092919063ffffffff16565b805190915015611e205780806020019051810190611dc19190612a6c565b611e205760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161047b565b505050565b6000610dc98284612b70565b60606000611e3f8585611ec2565b90508481611e4c85611f04565b604051602001611e5e93929190612b92565b6040516020818303038152906040529150509392505050565b6040516001600160a01b038316602482015260448101829052611e2090849063a9059cbb60e01b90606401611746565b6000610dc98284612bd5565b60606116508484600085611f71565b815160609015611ef35781604051602001611edd9190612be8565b6040516020818303038152906040529050610dcc565b81604051602001611edd9190612c1c565b6060611f1c6001600160801b03602084901c16612041565b611f378360601b6bffffffffffffffffffffffff1916612041565b604051602001611f5b9291909182526001600160c01b031916602082015260280190565b6040516020818303038152906040529050919050565b606082471015611fd25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161047b565b600080866001600160a01b03168587604051611fee9190612c41565b60006040518083038185875af1925050503d806000811461202b576040519150601f19603f3d011682016040523d82523d6000602084013e612030565b606091505b509150915061106a878383876121da565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f0808080808080808080808080808080808080808080808080808080808080808168161215c5761215c612b5a565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b60608315612249578251600003612242576001600160a01b0385163b6122425760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161047b565b5081611650565b611650838381511561225e5781518083602001fd5b8060405162461bcd60e51b815260040161047b91906127f2565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006020828403121561230157600080fd5b5035919050565b6001600160a01b038116811461231d57600080fd5b50565b803561232b81612308565b919050565b803563ffffffff8116811461232b57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561237e5761237e612344565b60405290565b600082601f83011261239557600080fd5b813567ffffffffffffffff808211156123b0576123b0612344565b604051601f8301601f19908116603f011681019082821181831017156123d8576123d8612344565b816040528381528660208588010111156123f157600080fd5b836020870160208301376000602085830101528094505050505092915050565b801515811461231d57600080fd5b803561232b81612411565b6000610160828403121561243d57600080fd5b61244561235a565b905061245082612320565b815261245e60208301612320565b602082015261246f60408301612320565b60408201526124806060830161241f565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b60008060008060006101e086880312156124f057600080fd5b85356124fb81612308565b94506020860135935061251060408701612330565b9250606086013567ffffffffffffffff81111561252c57600080fd5b61253888828901612384565b925050612548876080880161242a565b90509295509295909350565b634e487b7160e01b600052602160045260246000fd5b602081016007831061258c57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060008061020087890312156125ac57600080fd5b86356125b781612308565b9550602087013594506125cc60408801612330565b9350606087013567ffffffffffffffff8111156125e857600080fd5b6125f489828a01612384565b935050612604886080890161242a565b91506101e087013590509295509295509295565b600080600080600080610200878903121561263257600080fd5b8635955061264260208801612330565b9450604087013567ffffffffffffffff81111561265e57600080fd5b61266a89828a01612384565b94505061267a886060890161242a565b92506101c087013561268b81612308565b91506101e087013561269c81612308565b809150509295509295509295565b60008060008060008060008060006101208a8c0312156126c957600080fd5b893598506126d960208b01612330565b975060408a013567ffffffffffffffff8111156126f557600080fd5b6127018c828d01612384565b97505060608a013561271281612308565b955060808a0135945060a08a0135935060c08a0135925060e08a013561273781612308565b809250506101008a013590509295985092959850929598565b6000806040838503121561276357600080fd5b823567ffffffffffffffff81111561277a57600080fd5b61278685828601612384565b925050602083013561279781612308565b809150509250929050565b60005b838110156127bd5781810151838201526020016127a5565b50506000910152565b600081518084526127de8160208601602086016127a2565b601f01601f19169290920160200192915050565b602081526000610dc960208301846127c6565b6000806000806000806000610220888a03121561282157600080fd5b873561282c81612308565b96506020880135955061284160408901612330565b9450606088013567ffffffffffffffff81111561285d57600080fd5b6128698a828b01612384565b9450506128798960808a0161242a565b92506101e088013561288a81612308565b80925050610200880135905092959891949750929550565b600080600080600080600060e0888a0312156128bd57600080fd5b873596506128cd60208901612330565b9550604088013567ffffffffffffffff8111156128e957600080fd5b6128f58a828b01612384565b955050606088013561290681612308565b9699959850939660808101359560a0820135955060c0909101359350915050565b60006020828403121561293957600080fd5b5051919050565b83815263ffffffff831660208201526060604082015260006103c760608301846127c6565b80516001600160a01b03168252602081015161298c60208401826001600160a01b03169052565b5060408101516129a760408401826001600160a01b03169052565b5060608101516129bb606084018215159052565b506080818101519083015260a0808201519083015260c0808201519083015260e080820151908301526101008082015190830152610120808201519083015261014090810151910152565b60006101a063ffffffff86168352806020840152612a26818401866127c6565b9150506116506040830184612965565b60006101c086835263ffffffff86166020840152806040840152612a5c818401866127c6565b9150506103c76060830184612965565b600060208284031215612a7e57600080fd5b8151612a8981612411565b9392505050565b600060208284031215612aa257600080fd5b6040516020810181811067ffffffffffffffff82111715612ac557612ac5612344565b6040529151825250919050565b60018060a01b038516815283602082015263ffffffff831660408201526080606082015260006103c460808301846127c6565b634e487b7160e01b600052601160045260246000fd5b80820180821115610dcc57610dcc612b05565b600060208284031215612b4057600080fd5b8151612a8981612308565b6101608101610dcc8284612965565b634e487b7160e01b600052601260045260246000fd5b600082612b8d57634e487b7160e01b600052601260045260246000fd5b500490565b60008451612ba48184602089016127a2565b845190830190612bb88183602089016127a2565b8451910190612bcb8183602088016127a2565b0195945050505050565b81810381811115610dcc57610dcc612b05565b600b60fa1b815260008251612c048160018501602087016127a2565b601d60f91b6001939091019283015250600201919050565b60008251612c2e8184602087016127a2565b601d60f91b920191825250600101919050565b60008251612c538184602087016127a2565b919091019291505056fea26469706673582212207c1a8272066f92acada46733e74302826962f32725815e80d1429f1316f3789c64736f6c63430008110033";

type SkinnyOptimisticOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SkinnyOptimisticOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SkinnyOptimisticOracle__factory extends ContractFactory {
  constructor(...args: SkinnyOptimisticOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liveness: PromiseOrValue<BigNumberish>,
    _finderAddress: PromiseOrValue<string>,
    _timerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SkinnyOptimisticOracle> {
    return super.deploy(
      _liveness,
      _finderAddress,
      _timerAddress,
      overrides || {}
    ) as Promise<SkinnyOptimisticOracle>;
  }
  override getDeployTransaction(
    _liveness: PromiseOrValue<BigNumberish>,
    _finderAddress: PromiseOrValue<string>,
    _timerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _liveness,
      _finderAddress,
      _timerAddress,
      overrides || {}
    );
  }
  override attach(address: string): SkinnyOptimisticOracle {
    return super.attach(address) as SkinnyOptimisticOracle;
  }
  override connect(signer: Signer): SkinnyOptimisticOracle__factory {
    return super.connect(signer) as SkinnyOptimisticOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SkinnyOptimisticOracleInterface {
    return new utils.Interface(_abi) as SkinnyOptimisticOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SkinnyOptimisticOracle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SkinnyOptimisticOracle;
  }
}
