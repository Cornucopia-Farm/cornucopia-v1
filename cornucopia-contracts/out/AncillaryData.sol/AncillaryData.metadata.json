{
  "compiler": {
    "version": "0.8.13+commit.abaa5c0e"
  },
  "language": "Solidity",
  "output": {
    "abi": [],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "title": "Library for encoding and decoding ancillary data for DVM price requests.",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "notice": "We assume that on-chain ancillary data can be formatted directly from bytes to utf8 encoding via web3.utils.hexToUtf8, and that clients will parse the utf8-encoded ancillary data as a comma-delimitted key-value dictionary. Therefore, this library provides internal methods that aid appending to ancillary data from Solidity smart contracts. More details on UMA's ancillary data guidelines below: https://docs.google.com/document/d/1zhKKjgY1BupBGPPrY_WOJvui0B6DMcd-xDR8-9-SPDw/edit",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol": "AncillaryData"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/openzeppelin-contracts/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":protocol/=lib/protocol/",
      ":uma-implementation/=lib/protocol/packages/core/contracts/oracle/implementation/",
      ":uma-interface/=lib/protocol/packages/core/contracts/oracle/interfaces/"
    ]
  },
  "sources": {
    "lib/protocol/packages/core/contracts/common/implementation/AncillaryData.sol": {
      "keccak256": "0x8ff33ac32d3e6de25de9e0ac2c0ff9a621f187fa97e9ee84092b327471baa3ce",
      "license": "AGPL-3.0-only",
      "urls": [
        "bzz-raw://0bbaed49756e8cf7ef405e132f441cd7a735ac6186a200b0179147e7d137b74a",
        "dweb:/ipfs/QmeSBJX5a61LZPxbkUKS2NF4LSxemgDwjD65fCAmyP7PX2"
      ]
    }
  },
  "version": 1
}