/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  OracleAncillaryInterface,
  OracleAncillaryInterfaceInterface,
} from "../../../../../../../../lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/OracleAncillaryInterface";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
    ],
    name: "hasPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
    ],
    name: "requestPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class OracleAncillaryInterface__factory {
  static readonly abi = _abi;
  static createInterface(): OracleAncillaryInterfaceInterface {
    return new utils.Interface(_abi) as OracleAncillaryInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleAncillaryInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OracleAncillaryInterface;
  }
}
