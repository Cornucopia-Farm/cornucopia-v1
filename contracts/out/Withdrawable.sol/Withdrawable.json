{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addMember(uint256,address)": "74d0a676",
    "getMember(uint256)": "ab3545e5",
    "holdsRole(uint256,address)": "7cdc1cb9",
    "removeMember(uint256,address)": "6be7658b",
    "renounceMembership(uint256)": "aaa14ca3",
    "resetMember(uint256,address)": "d97c05be",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawErc20(address,uint256)": "bd1f4b52"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"withdrawErc20(address,uint256)\":{\"params\":{\"amount\":\"amount of tokens to withdraw.\",\"erc20Address\":\"ERC20 token to withdraw.\"}}},\"title\":\"Base contract that allows a specific role to withdraw any ETH and/or ERC20 tokens that the contract holds.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws ETH from the contract.\"},\"withdrawErc20(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/protocol/packages/core/contracts/common/implementation/Withdrawable.sol\":\"Withdrawable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts--upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":protocol/=lib/protocol/\",\":uma-dvm-implementation/=lib/protocol/packages/core/contracts/data-verification-mechanism/implementation/\",\":uma-dvm-interface/=lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/\",\":uma-oracle-implementation/=lib/protocol/packages/core/contracts/optimistic-oracle/\",\":uma-oracle-interface/=lib/protocol/packages/core/contracts/optimistic-oracle/interfaces/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"lib/protocol/packages/core/contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d\",\"dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddedSharedMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedSharedMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ResetExclusiveMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addMember"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "memberToCheck",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "holdsRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "memberToRemove",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMember"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceMembership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetMember"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "erc20Address",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawErc20"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addMember(uint256,address)": {
            "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
            "params": {
              "newMember": "the new SharedRole member.",
              "roleId": "the SharedRole membership to modify."
            }
          },
          "getMember(uint256)": {
            "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
            "params": {
              "roleId": "the ExclusiveRole membership to check."
            },
            "returns": {
              "_0": "the address of the current ExclusiveRole member."
            }
          },
          "holdsRole(uint256,address)": {
            "details": "Reverts if roleId does not correspond to an initialized role.",
            "params": {
              "memberToCheck": "the address to check.",
              "roleId": "the Role to check."
            },
            "returns": {
              "_0": "True if `memberToCheck` is a member of `roleId`."
            }
          },
          "removeMember(uint256,address)": {
            "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
            "params": {
              "memberToRemove": "the current SharedRole member to remove.",
              "roleId": "the SharedRole membership to modify."
            }
          },
          "renounceMembership(uint256)": {
            "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
            "params": {
              "roleId": "the SharedRole membership to modify."
            }
          },
          "resetMember(uint256,address)": {
            "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
            "params": {
              "newMember": "the new ExclusiveRole member.",
              "roleId": "the ExclusiveRole membership to modify."
            }
          },
          "withdrawErc20(address,uint256)": {
            "params": {
              "amount": "amount of tokens to withdraw.",
              "erc20Address": "ERC20 token to withdraw."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addMember(uint256,address)": {
            "notice": "Adds `newMember` to the shared role, `roleId`."
          },
          "getMember(uint256)": {
            "notice": "Gets the current holder of the exclusive role, `roleId`."
          },
          "holdsRole(uint256,address)": {
            "notice": "Whether `memberToCheck` is a member of roleId."
          },
          "removeMember(uint256,address)": {
            "notice": "Removes `memberToRemove` from the shared role, `roleId`."
          },
          "renounceMembership(uint256)": {
            "notice": "Removes caller from the role, `roleId`."
          },
          "resetMember(uint256,address)": {
            "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
          },
          "withdraw(uint256)": {
            "notice": "Withdraws ETH from the contract."
          },
          "withdrawErc20(address,uint256)": {
            "notice": "Withdraws ERC20 tokens from the contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts--upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":protocol/=lib/protocol/",
        ":uma-dvm-implementation/=lib/protocol/packages/core/contracts/data-verification-mechanism/implementation/",
        ":uma-dvm-interface/=lib/protocol/packages/core/contracts/data-verification-mechanism/interfaces/",
        ":uma-oracle-implementation/=lib/protocol/packages/core/contracts/optimistic-oracle/",
        ":uma-oracle-interface/=lib/protocol/packages/core/contracts/optimistic-oracle/interfaces/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/protocol/packages/core/contracts/common/implementation/Withdrawable.sol": "Withdrawable"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/protocol/packages/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/implementation/Withdrawable.sol": {
        "keccak256": "0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630",
        "urls": [
          "bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d",
          "dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
    "id": 30752,
    "exportedSymbols": {
      "Address": [
        26962
      ],
      "Exclusive": [
        29992
      ],
      "IERC20": [
        26290
      ],
      "IERC20Permit": [
        26351
      ],
      "MultiRole": [
        30544
      ],
      "SafeERC20": [
        26632
      ],
      "Shared": [
        30088
      ],
      "Withdrawable": [
        30751
      ]
    },
    "nodeType": "SourceUnit",
    "src": "77:2275:33",
    "nodes": [
      {
        "id": 30654,
        "nodeType": "PragmaDirective",
        "src": "77:23:33",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 30655,
        "nodeType": "ImportDirective",
        "src": "102:51:33",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30752,
        "sourceUnit": 26963,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30656,
        "nodeType": "ImportDirective",
        "src": "154:56:33",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30752,
        "sourceUnit": 26291,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30657,
        "nodeType": "ImportDirective",
        "src": "211:65:33",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30752,
        "sourceUnit": 26633,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30658,
        "nodeType": "ImportDirective",
        "src": "278:25:33",
        "nodes": [],
        "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/MultiRole.sol",
        "file": "./MultiRole.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30752,
        "sourceUnit": 30545,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30751,
        "nodeType": "ContractDefinition",
        "src": "430:1921:33",
        "nodes": [
          {
            "id": 30665,
            "nodeType": "UsingForDirective",
            "src": "480:27:33",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 30662,
              "name": "SafeERC20",
              "nameLocations": [
                "486:9:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26632,
              "src": "486:9:33"
            },
            "typeName": {
              "id": 30664,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30663,
                "name": "IERC20",
                "nameLocations": [
                  "500:6:33"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26290,
                "src": "500:6:33"
              },
              "referencedDeclaration": 26290,
              "src": "500:6:33",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$26290",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 30667,
            "nodeType": "VariableDeclaration",
            "src": "513:22:33",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "roleId",
            "nameLocation": "529:6:33",
            "scope": 30751,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30666,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "513:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 30688,
            "nodeType": "FunctionDefinition",
            "src": "606:129:33",
            "nodes": [],
            "body": {
              "id": 30687,
              "nodeType": "Block",
              "src": "672:63:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 30681,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "708:3:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 30682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "712:6:33",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "708:10:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 30680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "700:8:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 30679,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "700:8:33",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "700:19:33",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 30684,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30670,
                        "src": "721:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30676,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26962,
                        "src": "682:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$26962_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 30678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "690:9:33",
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26684,
                      "src": "682:17:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 30685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "682:46:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30686,
                  "nodeType": "ExpressionStatement",
                  "src": "682:46:33"
                }
              ]
            },
            "documentation": {
              "id": 30668,
              "nodeType": "StructuredDocumentation",
              "src": "542:59:33",
              "text": " @notice Withdraws ETH from the contract."
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30673,
                    "name": "roleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30667,
                    "src": "664:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30674,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30672,
                  "name": "onlyRoleHolder",
                  "nameLocations": [
                    "649:14:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30158,
                  "src": "649:14:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "649:22:33"
              }
            ],
            "name": "withdraw",
            "nameLocation": "615:8:33",
            "parameters": {
              "id": 30671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30670,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "632:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 30688,
                  "src": "624:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:16:33"
            },
            "returnParameters": {
              "id": 30675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:33"
            },
            "scope": 30751,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30715,
            "nodeType": "FunctionDefinition",
            "src": "917:193:33",
            "nodes": [],
            "body": {
              "id": 30714,
              "nodeType": "Block",
              "src": "1010:100:33",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30701,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "1027:5:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 30714,
                      "src": "1020:12:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$26290",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 30700,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30699,
                          "name": "IERC20",
                          "nameLocations": [
                            "1020:6:33"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26290,
                          "src": "1020:6:33"
                        },
                        "referencedDeclaration": 26290,
                        "src": "1020:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26290",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30705,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30703,
                        "name": "erc20Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30691,
                        "src": "1042:12:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30702,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26290,
                      "src": "1035:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$26290_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 30704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:20:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$26290",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1020:35:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 30709,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1084:3:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1088:6:33",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1084:10:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30711,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30693,
                        "src": "1096:6:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30706,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30701,
                        "src": "1065:5:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26290",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 30708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1071:12:33",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26383,
                      "src": "1065:18:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$26290_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$26290_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 30712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:38:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30713,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:38:33"
                }
              ]
            },
            "documentation": {
              "id": 30689,
              "nodeType": "StructuredDocumentation",
              "src": "741:171:33",
              "text": " @notice Withdraws ERC20 tokens from the contract.\n @param erc20Address ERC20 token to withdraw.\n @param amount amount of tokens to withdraw."
            },
            "functionSelector": "bd1f4b52",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30696,
                    "name": "roleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30667,
                    "src": "1002:6:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30695,
                  "name": "onlyRoleHolder",
                  "nameLocations": [
                    "987:14:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30158,
                  "src": "987:14:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "987:22:33"
              }
            ],
            "name": "withdrawErc20",
            "nameLocation": "926:13:33",
            "parameters": {
              "id": 30694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30691,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "948:12:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 30715,
                  "src": "940:20:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30693,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "970:6:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 30715,
                  "src": "962:14:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:38:33"
            },
            "returnParameters": {
              "id": 30698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1010:0:33"
            },
            "scope": 30751,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30736,
            "nodeType": "FunctionDefinition",
            "src": "1619:249:33",
            "nodes": [],
            "body": {
              "id": 30735,
              "nodeType": "Block",
              "src": "1757:111:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30725,
                      "name": "roleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30667,
                      "src": "1767:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30726,
                      "name": "newRoleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30718,
                      "src": "1776:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1767:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30728,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:18:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30730,
                        "name": "newRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30718,
                        "src": "1816:9:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 30731,
                        "name": "managingRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30720,
                        "src": "1827:14:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 30732,
                        "name": "withdrawerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30722,
                        "src": "1843:17:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30729,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30543,
                      "src": "1795:20:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 30733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:66:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30734,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:66:33"
                }
              ]
            },
            "documentation": {
              "id": 30716,
              "nodeType": "StructuredDocumentation",
              "src": "1116:498:33",
              "text": " @notice Internal method that allows derived contracts to create a role for withdrawal.\n @dev Either this method or `_setWithdrawRole` must be called by the derived class for this contract to function\n properly.\n @param newRoleId ID corresponding to role whose members can withdraw.\n @param managingRoleId ID corresponding to managing role who can modify the withdrawable role's membership.\n @param withdrawerAddress new manager of withdrawable role."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createWithdrawRole",
            "nameLocation": "1628:19:33",
            "parameters": {
              "id": 30723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30718,
                  "mutability": "mutable",
                  "name": "newRoleId",
                  "nameLocation": "1665:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 30736,
                  "src": "1657:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30720,
                  "mutability": "mutable",
                  "name": "managingRoleId",
                  "nameLocation": "1692:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 30736,
                  "src": "1684:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30722,
                  "mutability": "mutable",
                  "name": "withdrawerAddress",
                  "nameLocation": "1724:17:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 30736,
                  "src": "1716:25:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:100:33"
            },
            "returnParameters": {
              "id": 30724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1757:0:33"
            },
            "scope": 30751,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30750,
            "nodeType": "FunctionDefinition",
            "src": "2235:114:33",
            "nodes": [],
            "body": {
              "id": 30749,
              "nodeType": "Block",
              "src": "2314:35:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30745,
                      "name": "roleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30667,
                      "src": "2324:6:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30746,
                      "name": "setRoleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30739,
                      "src": "2333:9:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2324:18:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30748,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:18:33"
                }
              ]
            },
            "documentation": {
              "id": 30737,
              "nodeType": "StructuredDocumentation",
              "src": "1874:356:33",
              "text": " @notice Internal method that allows derived contracts to choose the role for withdrawal.\n @dev The role `setRoleId` must exist. Either this method or `_createWithdrawRole` must be\n called by the derived class for this contract to function properly.\n @param setRoleId ID corresponding to role whose members can withdraw."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30742,
                    "name": "setRoleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30739,
                    "src": "2303:9:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 30743,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30741,
                  "name": "onlyValidRole",
                  "nameLocations": [
                    "2289:13:33"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30418,
                  "src": "2289:13:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "2289:24:33"
              }
            ],
            "name": "_setWithdrawRole",
            "nameLocation": "2244:16:33",
            "parameters": {
              "id": 30740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30739,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nameLocation": "2269:9:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 30750,
                  "src": "2261:17:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2260:19:33"
            },
            "returnParameters": {
              "id": 30744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2314:0:33"
            },
            "scope": 30751,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 30660,
              "name": "MultiRole",
              "nameLocations": [
                "464:9:33"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30544,
              "src": "464:9:33"
            },
            "id": 30661,
            "nodeType": "InheritanceSpecifier",
            "src": "464:9:33"
          }
        ],
        "canonicalName": "Withdrawable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30659,
          "nodeType": "StructuredDocumentation",
          "src": "305:124:33",
          "text": " @title Base contract that allows a specific role to withdraw any ETH and/or ERC20 tokens that the contract holds."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30751,
          30544
        ],
        "name": "Withdrawable",
        "nameLocation": "448:12:33",
        "scope": 30752,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 33
}