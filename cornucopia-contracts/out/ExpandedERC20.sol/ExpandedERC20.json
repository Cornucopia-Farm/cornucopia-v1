{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_tokenDecimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "resetOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "348:3222:16:-:0;;;943:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:13:6;;1067:10:16;;1079:12;;2029:13:6;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2052:17:6;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;1103:9:16::1;:26:::0;;-1:-1:-1;;1103:26:16::1;;::::0;::::1;;::::0;;-1:-1:-1;1139:76:16::1;-1:-1:-1::0;1190:11:16;1204:10:::1;1139:20;:76::i;:::-;1225:80;1251:12;1243:21;1288:16;::::0;;1274:11:::1;1288:16:::0;;;::::1;::::0;::::1;::::0;;;1225:17:::1;:80::i;:::-;1315;1341:12;1333:21;::::0;1315:80:::1;943:459:::0;;;348:3222;;8816:519:19;8964:6;7559:16;7533:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;:::i;:::-;;7525:85;;;;-1:-1:-1;;;7525:85:19;;2087:2:40;7525:85:19;;;2069:21:40;2126:2;2106:18;;;2099:30;2165:32;2145:18;;;2138:60;2215:18;;7525:85:19;;;;;;;;;8982:17:::1;9002:13:::0;;;:5:::1;:13;::::0;;;;9041:18:::1;9025:13:::0;;::::1;:34:::0;;-1:-1:-1;;9025:34:19::1;9041:18:::0;;9025:34:::1;;::::0;;-1:-1:-1;9069:34:19;;;9113:48:::1;:28;::::0;::::1;9147:13:::0;9113:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9226:16;9192:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;::::0;9171:157:::1;;;::::0;-1:-1:-1;;;9171:157:19;;2446:2:40;9171:157:19::1;::::0;::::1;2428:21:40::0;2485:2;2465:18;;;2458:30;-1:-1:-1;;;;;;;;;;;2504:18:40;;;2497:62;2595:30;2575:18;;;2568:58;2643:19;;9171:157:19::1;2244:424:40::0;9171:157:19::1;8972:363;8816:519:::0;;;;:::o;7962:517::-;8117:6;7559:16;7533:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;:::i;:::-;;7525:85;;;;-1:-1:-1;;;7525:85:19;;2087:2:40;7525:85:19;;;2069:21:40;2126:2;2106:18;;;2099:30;2165:32;2145:18;;;2138:60;2215:18;;7525:85:19;1885:354:40;7525:85:19;8135:17:::1;8155:13:::0;;;:5:::1;:13;::::0;;;;;;;8178::::1;::::0;::::1;:31:::0;;-1:-1:-1;;8178:31:19::1;8194:15;8178:31;::::0;;8219:34;;;8155:13;8263:46:::1;::::0;:25:::1;::::0;::::1;::::0;8294:14;;8263:30:::1;;::::0;::::1;;:46:::0;::::1;:::i;:::-;8374:16;8340:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;:::i;:::-;::::0;8319:153:::1;;;::::0;-1:-1:-1;;;8319:153:19;;2875:2:40;8319:153:19::1;::::0;::::1;2857:21:40::0;2914:2;2894:18;;;2887:30;-1:-1:-1;;;;;;;;;;;2933:18:40;;;2926:62;3024:26;3004:18;;;2997:54;3068:19;;8319:153:19::1;2673:420:40::0;695:144:19;790:42;802:14;818:13;790:11;:42::i;:::-;695:144;;:::o;1514:232::-;1624:9;1619:121;1643:14;:21;1639:1;:25;1619:121;;;1685:44;1695:14;1711;1726:1;1711:17;;;;;;;;:::i;:::-;;;;;;;1685:9;;;:44;;:::i;:::-;1666:3;;;;:::i;:::-;;;;1619:121;;;;1514:232;;:::o;327:221::-;-1:-1:-1;;;;;433:25:19;;425:73;;;;-1:-1:-1;;;425:73:19;;3669:2:40;425:73:19;;;3651:21:40;3708:2;3688:18;;;3681:30;3747:34;3727:18;;;3720:62;-1:-1:-1;;;3798:18:40;;;3791:33;3841:19;;425:73:19;3467:399:40;425:73:19;508:33;;-1:-1:-1;;;;;;508:33:19;-1:-1:-1;;;;;508:33:19;;;;;;;327:221::o;1117:228::-;-1:-1:-1;;;;;1223:27:19;;1215:71;;;;-1:-1:-1;;;1215:71:19;;4073:2:40;1215:71:19;;;4055:21:40;4112:2;4092:18;;;4085:30;4151:33;4131:18;;;4124:61;4202:18;;1215:71:19;3871:355:40;1215:71:19;-1:-1:-1;;;;;1296:35:19;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1296:42:19;1334:4;1296:42;;;1117:228::o;348:3222:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:3222:16;;;-1:-1:-1;348:3222:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:40;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:40;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:40;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:40:o;1036:712::-;1142:6;1150;1158;1211:2;1199:9;1190:7;1186:23;1182:32;1179:52;;;1227:1;1224;1217:12;1179:52;1254:16;;-1:-1:-1;;;;;1319:14:40;;;1316:34;;;1346:1;1343;1336:12;1316:34;1369:61;1422:7;1413:6;1402:9;1398:22;1369:61;:::i;:::-;1359:71;;1476:2;1465:9;1461:18;1455:25;1439:41;;1505:2;1495:8;1492:16;1489:36;;;1521:1;1518;1511:12;1489:36;;1544:63;1599:7;1588:8;1577:9;1573:24;1544:63;:::i;:::-;1534:73;;;1650:2;1639:9;1635:18;1629:25;1694:4;1687:5;1683:16;1676:5;1673:27;1663:55;;1714:1;1711;1704:12;1663:55;1737:5;1727:15;;;1036:712;;;;;:::o;1753:127::-;1814:10;1809:3;1805:20;1802:1;1795:31;1845:4;1842:1;1835:15;1869:4;1866:1;1859:15;3098:127;3159:10;3154:3;3150:20;3147:1;3140:31;3190:4;3187:1;3180:15;3214:4;3211:1;3204:15;3230:232;3269:3;3290:17;;;3287:140;;3349:10;3344:3;3340:20;3337:1;3330:31;3384:4;3381:1;3374:15;3412:4;3409:1;3402:15;3287:140;-1:-1:-1;3454:1:40;3443:13;;3230:232::o;4231:380::-;4310:1;4306:12;;;;4353;;;4374:61;;4428:4;4420:6;4416:17;4406:27;;4374:61;4481:2;4473:6;4470:14;4450:18;4447:38;4444:161;;4527:10;4522:3;4518:20;4515:1;4508:31;4562:4;4559:1;4552:15;4590:4;4587:1;4580:15;4444:161;;4231:380;;;:::o;:::-;348:3222:16;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806374d0a676116100c3578063a9059cbb1161007c578063a9059cbb146102be578063aaa14ca3146102d1578063ab3545e5146102e4578063d97c05be1461030f578063dd62ed3e14610322578063f44637ba1461035b57600080fd5b806374d0a6761461025757806379cc67901461026a5780637cdc1cb91461027d57806395d89b4114610290578063983b2d5614610298578063a457c2d7146102ab57600080fd5b8063395093511161011557806339509351146101cd57806340c10f19146101e057806342966c68146101f35780636be7658b1461020857806370a082311461021b57806373cc802a1461024457600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61036e565b604051610167919061117b565b60405180910390f35b61018361017e3660046111ec565b610400565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611216565b610417565b60065460405160ff9091168152602001610167565b6101836101db3660046111ec565b6104cd565b6101836101ee3660046111ec565b610509565b610206610201366004611252565b610547565b005b61020661021636600461126b565b61057d565b610197610229366004611297565b6001600160a01b031660009081526020819052604090205490565b610206610252366004611297565b610653565b61020661026536600461126b565b610661565b6101836102783660046111ec565b610737565b61018361028b36600461126b565b61076b565b61015a610830565b6102066102a6366004611297565b61083f565b6101836102b93660046111ec565b61084b565b6101836102cc3660046111ec565b6108da565b6102066102df366004611252565b6108e7565b6102f76102f2366004611252565b6109a3565b6040516001600160a01b039091168152602001610167565b61020661031d36600461126b565b610a0f565b6101976103303660046112b9565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610206610369366004611297565b610ae5565b60606003805461037d906112e3565b80601f01602080910402602001604051908101604052809291908181526020018280546103a9906112e3565b80156103f65780601f106103cb576101008083540402835291602001916103f6565b820191906000526020600020905b8154815290600101906020018083116103d957829003601f168201915b5050505050905090565b600061040d338484610b3f565b5060015b92915050565b6001600160a01b038316600090815260016020908152604080832033845290915281205460001981146104b757828110156104aa5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104b78533858403610b3f565b6104c2858585610c63565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161040d91859061050490869061132d565b610b3f565b60006001610517813361076b565b6105335760405162461bcd60e51b81526004016104a19061135b565b61053d8484610e32565b5060019392505050565b6002610553813361076b565b61056f5760405162461bcd60e51b81526004016104a19061135b565b6105793383610f11565b5050565b81600260008281526005602052604090206001015460ff1660028111156105a6576105a6611345565b146105c35760405162461bcd60e51b81526004016104a19061139d565b60008381526005602052604090205483906105de903361076b565b6105fa5760405162461bcd60e51b81526004016104a1906113e9565b6000848152600560205260409020610615906003018461105f565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b61065e600082610a0f565b50565b81600260008281526005602052604090206001015460ff16600281111561068a5761068a611345565b146106a75760405162461bcd60e51b81526004016104a19061139d565b60008381526005602052604090205483906106c2903361076b565b6106de5760405162461bcd60e51b81526004016104a1906113e9565b60008481526005602052604090206106f99060030184611081565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b60006002610745813361076b565b6107615760405162461bcd60e51b81526004016104a19061135b565b61053d8484610f11565b600082815260056020526040812060018082015460ff16600281111561079357610793611345565b036107b45760028101546001600160a01b038481169116145b915050610411565b6002600182015460ff1660028111156107cf576107cf611345565b036107f7576001600160a01b038316600090815260038201602052604090205460ff166107ac565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b60448201526064016104a1565b60606004805461037d906112e3565b61065e60015b82610661565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156108cd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104a1565b61053d3385858403610b3f565b600061040d338484610c63565b80600260008281526005602052604090206001015460ff16600281111561091057610910611345565b1461092d5760405162461bcd60e51b81526004016104a19061139d565b81610938813361076b565b6109545760405162461bcd60e51b81526004016104a19061135b565b600083815260056020526040902061096f906003013361105f565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526005602052604090206001015460ff1660028111156109ce576109ce611345565b146109eb5760405162461bcd60e51b81526004016104a19061142d565b6000838152600560205260409020600201546001600160a01b031691505b50919050565b81600160008281526005602052604090206001015460ff166002811115610a3857610a38611345565b14610a555760405162461bcd60e51b81526004016104a19061142d565b6000838152600560205260409020548390610a70903361076b565b610a8c5760405162461bcd60e51b81526004016104a1906113e9565b6000848152600560205260409020610aa790600201846110fc565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b61065e6002610845565b61057982826110fc565b60005b8151811015610b3a57610b2883838381518110610b1b57610b1b61147c565b6020026020010151611081565b80610b3281611492565b915050610afc565b505050565b6001600160a01b038316610ba15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a1565b6001600160a01b038216610c025760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610cc75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a1565b6001600160a01b038216610d295760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a1565b6001600160a01b03831660009081526020819052604090205481811015610da15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104a1565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610dd890849061132d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2491815260200190565b60405180910390a350505050565b6001600160a01b038216610e885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a1565b8060026000828254610e9a919061132d565b90915550506001600160a01b03821660009081526020819052604081208054839290610ec790849061132d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610f715760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a1565b6001600160a01b03821660009081526020819052604090205481811015610fe55760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104a1565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110149084906114ab565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166110d75760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c650060448201526064016104a1565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811661115e5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f742073657420616e206578636c757369766520726f6c6520746f2060448201526203078360ec1b60648201526084016104a1565b81546001600160a01b0319166001600160a01b0391909116179055565b600060208083528351808285015260005b818110156111a85785810183015185820160400152820161118c565b818111156111ba576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146111e757600080fd5b919050565b600080604083850312156111ff57600080fd5b611208836111d0565b946020939093013593505050565b60008060006060848603121561122b57600080fd5b611234846111d0565b9250611242602085016111d0565b9150604084013590509250925092565b60006020828403121561126457600080fd5b5035919050565b6000806040838503121561127e57600080fd5b8235915061128e602084016111d0565b90509250929050565b6000602082840312156112a957600080fd5b6112b2826111d0565b9392505050565b600080604083850312156112cc57600080fd5b6112d5836111d0565b915061128e602084016111d0565b600181811c908216806112f757607f821691505b602082108103610a0957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561134057611340611317565b500190565b634e487b7160e01b600052602160045260246000fd5b60208082526022908201527f53656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6040820152616c6560f01b606082015260800190565b6020808252602c908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526b2053686172656420726f6c6560a01b606082015260800190565b60208082526024908201527f43616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e60408201526330b3b2b960e11b606082015260800190565b6020808252602f908201527f4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a656460408201526e204578636c757369766520726f6c6560881b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114a4576114a4611317565b5060010190565b6000828210156114bd576114bd611317565b50039056fea2646970667358221220d04325700cd4dd4eaa1f70741bb5699c3e4e015a1f5315b3c7cc4d6f31d1839e64736f6c634300080d0033",
    "sourceMap": "348:3222:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4408:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:40;;1211:22;1193:41;;1181:2;1166:18;4408:166:6;1053:187:40;3229:106:6;3316:12;;3229:106;;;1391:25:40;;;1379:2;1364:18;3229:106:6;1245:177:40;5149:557:6;;;;;;:::i;:::-;;:::i;1408:105:16:-;1497:9;;1408:105;;1497:9;;;;1902:36:40;;1890:2;1875:18;1408:105:16;1760:184:40;6101:212:6;;;;;;:::i;:::-;;:::i;1754:216:16:-;;;;;;:::i;:::-;;:::i;2094:126::-;;;;;;:::i;:::-;;:::i;:::-;;6404:262:19;;;;;;:::i;:::-;;:::i;3393:125:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:6;3467:7;3493:18;;;;;;;;;;;;3393:125;3446:122:16;;;;;;:::i;:::-;;:::i;5790:239:19:-;;;;;;:::i;:::-;;:::i;2449:220:16:-;;;;;;:::i;:::-;;:::i;3945:428:19:-;;;;;;:::i;:::-;;:::i;2352:102:6:-;;;:::i;2852:120:16:-;;;;;;:::i;:::-;;:::i;6800:405:6:-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;6933:235:19:-;;;;;;:::i;:::-;;:::i;5284:160::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2748:32:40;;;2730:51;;2718:2;2703:18;5284:160:19;2584:203:40;4731:252:19;;;;;;:::i;:::-;;:::i;3951:149:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:6;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;3155:120:16;;;;;;:::i;:::-;;:::i;2141:98:6:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4408:166::-;4491:4;4507:39;719:10:11;4530:7:6;4539:6;4507:8;:39::i;:::-;-1:-1:-1;4563:4:6;4408:166;;;;;:::o;5149:557::-;-1:-1:-1;;;;;5328:19:6;;5285:4;5328:19;;;:11;:19;;;;;;;;719:10:11;5328:33:6;;;;;;;;-1:-1:-1;;5375:37:6;;5371:260;;5456:6;5436:16;:26;;5428:79;;;;-1:-1:-1;;;5428:79:6;;3644:2:40;5428:79:6;;;3626:21:40;3683:2;3663:18;;;3656:30;3722:34;3702:18;;;3695:62;-1:-1:-1;;;3773:18:40;;;3766:38;3821:19;;5428:79:6;;;;;;;;;5549:57;5558:6;719:10:11;5599:6:6;5580:16;:25;5549:8;:57::i;:::-;5641:36;5651:6;5659:9;5670:6;5641:9;:36::i;:::-;-1:-1:-1;5695:4:6;;5149:557;-1:-1:-1;;;;5149:557:6:o;6101:212::-;719:10:11;6189:4:6;6237:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6237:34:6;;;;;;;;;;6189:4;;6205:80;;6228:7;;6237:47;;6274:10;;6237:47;:::i;:::-;6205:8;:80::i;1754:216:16:-;1899:4;1867:12;2713:29:19;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:19;;;;;;;:::i;:::-;1919:23:16::1;1925:9;1936:5;1919;:23::i;:::-;-1:-1:-1::0;1959:4:16::1;::::0;1754:216;-1:-1:-1;;;1754:216:16:o;2094:126::-;2164:12;2713:29:19;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:19;;;;;;;:::i;:::-;2189:24:16::1;2195:10;2207:5;2189;:24::i;:::-;2094:126:::0;;:::o;6404:262:19:-;6484:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;:::i;:::-;;3517:98;;;;-1:-1:-1;;;3517:98:19;;;;;;;:::i;:::-;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;6508:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:19::1;;;;;;;:::i;:::-;6526:13:::2;::::0;;;:5:::2;:13;::::0;;;;:63:::2;::::0;:34:::2;;6574:14:::0;6526:47:::2;:63::i;:::-;6604:55;::::0;6648:10:::2;::::0;-1:-1:-1;;;;;6604:55:19;::::2;::::0;6624:6;;6604:55:::2;::::0;;;::::2;3625:1:::1;6404:262:::0;;;:::o;3446:122:16:-;3519:42;3539:11;3553:7;3519:11;:42::i;:::-;3446:122;:::o;5790:239:19:-;5862:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;:::i;:::-;;3517:98;;;;-1:-1:-1;;;3517:98:19;;;;;;;:::i;:::-;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;5886:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:19::1;;;;;;;:::i;:::-;5904:13:::2;::::0;;;:5:::2;:13;::::0;;;;:55:::2;::::0;:34:::2;;5949:9:::0;5904:44:::2;:55::i;:::-;5974:48;::::0;6011:10:::2;::::0;-1:-1:-1;;;;;5974:48:19;::::2;::::0;5992:6;;5974:48:::2;::::0;;;::::2;3625:1:::1;5790:239:::0;;;:::o;2449:220:16:-;2598:4;2566:12;2713:29:19;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:19;;;;;;;:::i;:::-;2618:23:16::1;2624:9;2635:5;2618;:23::i;3945:428:19:-:0;4024:4;4060:13;;;:5;:13;;;;;4104:18;4087:13;;;;;;:35;;;;;;;;:::i;:::-;;4083:250;;4145:28;;;276:21;-1:-1:-1;;;;;276:38:19;;;:21;;:38;4145:52;4138:59;;;;;4083:250;4235:15;4218:13;;;;;;:32;;;;;;;;:::i;:::-;;4214:119;;-1:-1:-1;;;;;1067:37:19;;1044:4;1067:37;;;4273:25;;;1067:37;;;;;;;;4273:49;941:170;4214:119;4342:24;;-1:-1:-1;;;4342:24:19;;5671:2:40;4342:24:19;;;5653:21:40;5710:2;5690:18;;;5683:30;-1:-1:-1;;;5729:18:40;;;5722:44;5783:18;;4342:24:19;5469:338:40;2352:102:6;2408:13;2440:7;2433:14;;;;;:::i;2852:120:16:-;2924:41;2942:12;2934:21;2957:7;2924:9;:41::i;6800:405:6:-;719:10:11;6893:4:6;6936:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6936:34:6;;;;;;;;;;6988:35;;;;6980:85;;;;-1:-1:-1;;;6980:85:6;;6014:2:40;6980:85:6;;;5996:21:40;6053:2;6033:18;;;6026:30;6092:34;6072:18;;;6065:62;-1:-1:-1;;;6143:18:40;;;6136:35;6188:19;;6980:85:6;5812:401:40;6980:85:6;7099:67;719:10:11;7122:7:6;7150:15;7131:16;:34;7099:8;:67::i;3721:172::-;3807:4;3823:42;719:10:11;3847:9:6;3858:6;3823:9;:42::i;6933:235:19:-;6995:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;:::i;:::-;;3517:98;;;;-1:-1:-1;;;3517:98:19;;;;;;;:::i;:::-;7018:6:::1;2713:29;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1::0;;;2705:76:19::1;;;;;;;:::i;:::-;7036:13:::2;::::0;;;:5:::2;:13;::::0;;;;:59:::2;::::0;:34:::2;;7084:10;7036:47;:59::i;:::-;7110:51;::::0;7150:10:::2;::::0;;;7130:6;;7110:51:::2;::::0;;;::::2;3625:1:::1;6933:235:::0;;:::o;5284:160::-;5362:7;5345:6;3278:18;3252:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;:::i;:::-;;3244:104;;;;-1:-1:-1;;;3244:104:19;;;;;;;:::i;:::-;5388:13:::1;::::0;;;:5:::1;:13;::::0;;;;:37:::1;;661:21:::0;-1:-1:-1;;;;;661:21:19;5381:56:::1;;3358:1;5284:160:::0;;;;:::o;4731:252::-;4808:6;3278:18;3252:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;:::i;:::-;;3244:104;;;;-1:-1:-1;;;3244:104:19;;;;;;;:::i;:::-;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;4832:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:19::1;;;;;;;:::i;:::-;4850:13:::2;::::0;;;:5:::2;:13;::::0;;;;:60:::2;::::0;:37:::2;;4900:9:::0;4850:49:::2;:60::i;:::-;4925:51;::::0;4965:10:::2;::::0;-1:-1:-1;;;;;4925:51:19;::::2;::::0;4946:6;;4925:51:::2;::::0;;;::::2;3358:1:::1;4731:252:::0;;;:::o;3155:120:16:-;3227:41;3245:12;3237:21;;695:144:19;790:42;802:14;818:13;790:11;:42::i;1514:232::-;1624:9;1619:121;1643:14;:21;1639:1;:25;1619:121;;;1685:44;1695:14;1711;1726:1;1711:17;;;;;;;;:::i;:::-;;;;;;;1685:9;:44::i;:::-;1666:3;;;;:::i;:::-;;;;1619:121;;;;1514:232;;:::o;10376:370:6:-;-1:-1:-1;;;;;10507:19:6;;10499:68;;;;-1:-1:-1;;;10499:68:6;;7108:2:40;10499:68:6;;;7090:21:40;7147:2;7127:18;;;7120:30;7186:34;7166:18;;;7159:62;-1:-1:-1;;;7237:18:40;;;7230:34;7281:19;;10499:68:6;6906:400:40;10499:68:6;-1:-1:-1;;;;;10585:21:6;;10577:68;;;;-1:-1:-1;;;10577:68:6;;7513:2:40;10577:68:6;;;7495:21:40;7552:2;7532:18;;;7525:30;7591:34;7571:18;;;7564:62;-1:-1:-1;;;7642:18:40;;;7635:32;7684:19;;10577:68:6;7311:398:40;10577:68:6;-1:-1:-1;;;;;10656:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10707:32;;1391:25:40;;;10707:32:6;;1364:18:40;10707:32:6;;;;;;;10376:370;;;:::o;7679:713::-;-1:-1:-1;;;;;7814:20:6;;7806:70;;;;-1:-1:-1;;;7806:70:6;;7916:2:40;7806:70:6;;;7898:21:40;7955:2;7935:18;;;7928:30;7994:34;7974:18;;;7967:62;-1:-1:-1;;;8045:18:40;;;8038:35;8090:19;;7806:70:6;7714:401:40;7806:70:6;-1:-1:-1;;;;;7894:23:6;;7886:71;;;;-1:-1:-1;;;7886:71:6;;8322:2:40;7886:71:6;;;8304:21:40;8361:2;8341:18;;;8334:30;8400:34;8380:18;;;8373:62;-1:-1:-1;;;8451:18:40;;;8444:33;8494:19;;7886:71:6;8120:399:40;7886:71:6;-1:-1:-1;;;;;8050:17:6;;8026:21;8050:17;;;;;;;;;;;8085:23;;;;8077:74;;;;-1:-1:-1;;;8077:74:6;;8726:2:40;8077:74:6;;;8708:21:40;8765:2;8745:18;;;8738:30;8804:34;8784:18;;;8777:62;-1:-1:-1;;;8855:18:40;;;8848:36;8901:19;;8077:74:6;8524:402:40;8077:74:6;-1:-1:-1;;;;;8185:17:6;;;:9;:17;;;;;;;;;;;8205:22;;;8185:42;;8247:20;;;;;;;;:30;;8221:6;;8185:9;8247:30;;8221:6;;8247:30;:::i;:::-;;;;;;;;8310:9;-1:-1:-1;;;;;8293:35:6;8302:6;-1:-1:-1;;;;;8293:35:6;;8321:6;8293:35;;;;1391:25:40;;1379:2;1364:18;;1245:177;8293:35:6;;;;;;;;7796:596;7679:713;;;:::o;8668:389::-;-1:-1:-1;;;;;8751:21:6;;8743:65;;;;-1:-1:-1;;;8743:65:6;;9133:2:40;8743:65:6;;;9115:21:40;9172:2;9152:18;;;9145:30;9211:33;9191:18;;;9184:61;9262:18;;8743:65:6;8931:355:40;8743:65:6;8895:6;8879:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8911:18:6;;:9;:18;;;;;;;;;;:28;;8933:6;;8911:9;:28;;8933:6;;8911:28;:::i;:::-;;;;-1:-1:-1;;8954:37:6;;1391:25:40;;;-1:-1:-1;;;;;8954:37:6;;;8971:1;;8954:37;;1379:2:40;1364:18;8954:37:6;;;;;;;2094:126:16;;:::o;9377:576:6:-;-1:-1:-1;;;;;9460:21:6;;9452:67;;;;-1:-1:-1;;;9452:67:6;;9493:2:40;9452:67:6;;;9475:21:40;9532:2;9512:18;;;9505:30;9571:34;9551:18;;;9544:62;-1:-1:-1;;;9622:18:40;;;9615:31;9663:19;;9452:67:6;9291:397:40;9452:67:6;-1:-1:-1;;;;;9615:18:6;;9590:22;9615:18;;;;;;;;;;;9651:24;;;;9643:71;;;;-1:-1:-1;;;9643:71:6;;9895:2:40;9643:71:6;;;9877:21:40;9934:2;9914:18;;;9907:30;9973:34;9953:18;;;9946:62;-1:-1:-1;;;10024:18:40;;;10017:32;10066:19;;9643:71:6;9693:398:40;9643:71:6;-1:-1:-1;;;;;9748:18:6;;:9;:18;;;;;;;;;;9769:23;;;9748:44;;9812:12;:22;;9786:6;;9748:9;9812:22;;9786:6;;9812:22;:::i;:::-;;;;-1:-1:-1;;9850:37:6;;1391:25:40;;;9876:1:6;;-1:-1:-1;;;;;9850:37:6;;;;;1379:2:40;1364:18;9850:37:6;;;;;;;1619:121:19;1514:232;;:::o;1351:157::-;-1:-1:-1;;;;;1455:38:19;1496:5;1455:38;;;;;;;;;;;:46;;-1:-1:-1;;1455:46:19;;;1351:157::o;1117:228::-;-1:-1:-1;;;;;1223:27:19;;1215:71;;;;-1:-1:-1;;;1215:71:19;;10428:2:40;1215:71:19;;;10410:21:40;10467:2;10447:18;;;10440:30;10506:33;10486:18;;;10479:61;10557:18;;1215:71:19;10226:355:40;1215:71:19;-1:-1:-1;;;;;1296:35:19;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1296:42:19;1334:4;1296:42;;;1117:228::o;327:221::-;-1:-1:-1;;;;;433:25:19;;425:73;;;;-1:-1:-1;;;425:73:19;;10788:2:40;425:73:19;;;10770:21:40;10827:2;10807:18;;;10800:30;10866:34;10846:18;;;10839:62;-1:-1:-1;;;10917:18:40;;;10910:33;10960:19;;425:73:19;10586:399:40;425:73:19;508:33;;-1:-1:-1;;;;;;508:33:19;-1:-1:-1;;;;;508:33:19;;;;;;;327:221::o;14:597:40:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:40;574:15;-1:-1:-1;;570:29:40;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:40:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:40;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:40:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:40;;1949:180;-1:-1:-1;1949:180:40:o;2134:254::-;2202:6;2210;2263:2;2251:9;2242:7;2238:23;2234:32;2231:52;;;2279:1;2276;2269:12;2231:52;2315:9;2302:23;2292:33;;2344:38;2378:2;2367:9;2363:18;2344:38;:::i;:::-;2334:48;;2134:254;;;;;:::o;2393:186::-;2452:6;2505:2;2493:9;2484:7;2480:23;2476:32;2473:52;;;2521:1;2518;2511:12;2473:52;2544:29;2563:9;2544:29;:::i;:::-;2534:39;2393:186;-1:-1:-1;;;2393:186:40:o;2792:260::-;2860:6;2868;2921:2;2909:9;2900:7;2896:23;2892:32;2889:52;;;2937:1;2934;2927:12;2889:52;2960:29;2979:9;2960:29;:::i;:::-;2950:39;;3008:38;3042:2;3031:9;3027:18;3008:38;:::i;3057:380::-;3136:1;3132:12;;;;3179;;;3200:61;;3254:4;3246:6;3242:17;3232:27;;3200:61;3307:2;3299:6;3296:14;3276:18;3273:38;3270:161;;3353:10;3348:3;3344:20;3341:1;3334:31;3388:4;3385:1;3378:15;3416:4;3413:1;3406:15;3851:127;3912:10;3907:3;3903:20;3900:1;3893:31;3943:4;3940:1;3933:15;3967:4;3964:1;3957:15;3983:128;4023:3;4054:1;4050:6;4047:1;4044:13;4041:39;;;4060:18;;:::i;:::-;-1:-1:-1;4096:9:40;;3983:128::o;4116:127::-;4177:10;4172:3;4168:20;4165:1;4158:31;4208:4;4205:1;4198:15;4232:4;4229:1;4222:15;4248:398;4450:2;4432:21;;;4489:2;4469:18;;;4462:30;4528:34;4523:2;4508:18;;4501:62;-1:-1:-1;;;4594:2:40;4579:18;;4572:32;4636:3;4621:19;;4248:398::o;4651:408::-;4853:2;4835:21;;;4892:2;4872:18;;;4865:30;4931:34;4926:2;4911:18;;4904:62;-1:-1:-1;;;4997:2:40;4982:18;;4975:42;5049:3;5034:19;;4651:408::o;5064:400::-;5266:2;5248:21;;;5305:2;5285:18;;;5278:30;5344:34;5339:2;5324:18;;5317:62;-1:-1:-1;;;5410:2:40;5395:18;;5388:34;5454:3;5439:19;;5064:400::o;6218:411::-;6420:2;6402:21;;;6459:2;6439:18;;;6432:30;6498:34;6493:2;6478:18;;6471:62;-1:-1:-1;;;6564:2:40;6549:18;;6542:45;6619:3;6604:19;;6218:411::o;6634:127::-;6695:10;6690:3;6686:20;6683:1;6676:31;6726:4;6723:1;6716:15;6750:4;6747:1;6740:15;6766:135;6805:3;6826:17;;;6823:43;;6846:18;;:::i;:::-;-1:-1:-1;6893:1:40;6882:13;;6766:135::o;10096:125::-;10136:4;10164:1;10161;10158:8;10155:34;;;10169:18;;:::i;:::-;-1:-1:-1;10206:9:40;;10096:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addBurner(address)": "f44637ba",
    "addMember(uint256,address)": "74d0a676",
    "addMinter(address)": "983b2d56",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getMember(uint256)": "ab3545e5",
    "holdsRole(uint256,address)": "7cdc1cb9",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "removeMember(uint256,address)": "6be7658b",
    "renounceMembership(uint256)": "aaa14ca3",
    "resetMember(uint256,address)": "d97c05be",
    "resetOwner(address)": "73cc802a",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Burner role is added.\"}},\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"addMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Minter role is added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\",\"params\":{\"value\":\"amount of tokens to burn.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns `value` tokens owned by `recipient`.\",\"params\":{\"recipient\":\"address to burn tokens from.\",\"value\":\"amount of tokens to burn.\"},\"returns\":{\"_0\":\"True if the burn succeeded, or False.\"}},\"constructor\":{\"params\":{\"_tokenDecimals\":\"The number of decimals to define token precision.\",\"_tokenName\":\"The name which describes the new token.\",\"_tokenSymbol\":\"The ticker abbreviation of the name. Ideally < 5 chars.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\",\"params\":{\"recipient\":\"address to mint to.\",\"value\":\"amount of tokens to mint.\"},\"returns\":{\"_0\":\"True if the mint succeeded, or False.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"resetOwner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The new holder of the Owner role.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"An ERC20 with permissioned burning and minting. The contract deployer will initially be the owner who is capable of adding new roles.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addBurner(address)\":{\"notice\":\"Add Burner role to account.\"},\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"addMinter(address)\":{\"notice\":\"Add Minter role to account.\"},\"constructor\":{\"notice\":\"Constructs the ExpandedERC20.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"resetOwner(address)\":{\"notice\":\"Reset Owner role to account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol\":\"ExpandedERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\",\":uma-implementation/=lib/protocol/packages/core/contracts/oracle/implementation/\",\":uma-interface/=lib/protocol/packages/core/contracts/oracle/interfaces/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc4bd4cdf3901aef67b2e5be256fd24305f4d7ed8de4b3240920be12991c983f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://deed1df0fe3885669b67518d3d21d30b3744098050fa3866e1f522003239a674\",\"dweb:/ipfs/QmVPhZPRGadMK6f3A86ihUXC1urZXRTaRGihyXSgdToV8Q\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140\",\"dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K\"]},\"lib/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"lib/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_tokenDecimals",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddedSharedMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "oldMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemovedSharedMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ResetExclusiveMember",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addBurner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addMember"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addMinter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "memberToCheck",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "holdsRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "memberToRemove",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMember"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceMembership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "roleId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "newMember",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetMember"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "resetOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addBurner(address)": {
            "details": "The caller must have the Owner role.",
            "params": {
              "account": "The address to which the Burner role is added."
            }
          },
          "addMember(uint256,address)": {
            "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
            "params": {
              "newMember": "the new SharedRole member.",
              "roleId": "the SharedRole membership to modify."
            }
          },
          "addMinter(address)": {
            "details": "The caller must have the Owner role.",
            "params": {
              "account": "The address to which the Minter role is added."
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `value` tokens owned by `msg.sender`.",
            "params": {
              "value": "amount of tokens to burn."
            }
          },
          "burnFrom(address,uint256)": {
            "details": "Burns `value` tokens owned by `recipient`.",
            "params": {
              "recipient": "address to burn tokens from.",
              "value": "amount of tokens to burn."
            },
            "returns": {
              "_0": "True if the burn succeeded, or False."
            }
          },
          "constructor": {
            "params": {
              "_tokenDecimals": "The number of decimals to define token precision.",
              "_tokenName": "The name which describes the new token.",
              "_tokenSymbol": "The ticker abbreviation of the name. Ideally < 5 chars."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "getMember(uint256)": {
            "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
            "params": {
              "roleId": "the ExclusiveRole membership to check."
            },
            "returns": {
              "_0": "the address of the current ExclusiveRole member."
            }
          },
          "holdsRole(uint256,address)": {
            "details": "Reverts if roleId does not correspond to an initialized role.",
            "params": {
              "memberToCheck": "the address to check.",
              "roleId": "the Role to check."
            },
            "returns": {
              "_0": "True if `memberToCheck` is a member of `roleId`."
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "Mints `value` tokens to `recipient`, returning true on success.",
            "params": {
              "recipient": "address to mint to.",
              "value": "amount of tokens to mint."
            },
            "returns": {
              "_0": "True if the mint succeeded, or False."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "removeMember(uint256,address)": {
            "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
            "params": {
              "memberToRemove": "the current SharedRole member to remove.",
              "roleId": "the SharedRole membership to modify."
            }
          },
          "renounceMembership(uint256)": {
            "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
            "params": {
              "roleId": "the SharedRole membership to modify."
            }
          },
          "resetMember(uint256,address)": {
            "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
            "params": {
              "newMember": "the new ExclusiveRole member.",
              "roleId": "the ExclusiveRole membership to modify."
            }
          },
          "resetOwner(address)": {
            "details": "The caller must have the Owner role.",
            "params": {
              "account": "The new holder of the Owner role."
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addBurner(address)": {
            "notice": "Add Burner role to account."
          },
          "addMember(uint256,address)": {
            "notice": "Adds `newMember` to the shared role, `roleId`."
          },
          "addMinter(address)": {
            "notice": "Add Minter role to account."
          },
          "constructor": {
            "notice": "Constructs the ExpandedERC20."
          },
          "getMember(uint256)": {
            "notice": "Gets the current holder of the exclusive role, `roleId`."
          },
          "holdsRole(uint256,address)": {
            "notice": "Whether `memberToCheck` is a member of roleId."
          },
          "removeMember(uint256,address)": {
            "notice": "Removes `memberToRemove` from the shared role, `roleId`."
          },
          "renounceMembership(uint256)": {
            "notice": "Removes caller from the role, `roleId`."
          },
          "resetMember(uint256,address)": {
            "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
          },
          "resetOwner(address)": {
            "notice": "Reset Owner role to account."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":protocol/=lib/protocol/",
        ":uma-implementation/=lib/protocol/packages/core/contracts/oracle/implementation/",
        ":uma-interface/=lib/protocol/packages/core/contracts/oracle/interfaces/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol": "ExpandedERC20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc4bd4cdf3901aef67b2e5be256fd24305f4d7ed8de4b3240920be12991c983f3",
        "urls": [
          "bzz-raw://deed1df0fe3885669b67518d3d21d30b3744098050fa3866e1f522003239a674",
          "dweb:/ipfs/QmVPhZPRGadMK6f3A86ihUXC1urZXRTaRGihyXSgdToV8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da",
        "urls": [
          "bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b",
          "dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol": {
        "keccak256": "0x8201459d3f78a1f97da7c421f2fbb859924d4facfc5fc235ba65d85bf12b2229",
        "urls": [
          "bzz-raw://990c055523abe059c0e3e9dc0d631b17db960899dbfcfb2c562bc1ed9de8f140",
          "dweb:/ipfs/QmNgQP68bBrZvP2Rs4TdpESS3LFxqGgtTELZ1wm5mZqh4K"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/implementation/MultiRole.sol": {
        "keccak256": "0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6",
        "urls": [
          "bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6",
          "dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol": {
        "keccak256": "0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26",
        "urls": [
          "bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3",
          "dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol",
    "id": 23107,
    "exportedSymbols": {
      "Context": [
        21881
      ],
      "ERC20": [
        21237
      ],
      "Exclusive": [
        24873
      ],
      "ExpandedERC20": [
        23106
      ],
      "ExpandedIERC20": [
        25706
      ],
      "IERC20": [
        21315
      ],
      "IERC20Metadata": [
        21340
      ],
      "MultiRole": [
        25425
      ],
      "Shared": [
        24969
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:3529:16",
    "nodes": [
      {
        "id": 22885,
        "nodeType": "PragmaDirective",
        "src": "42:23:16",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 22886,
        "nodeType": "ImportDirective",
        "src": "67:55:16",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23107,
        "sourceUnit": 21238,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22887,
        "nodeType": "ImportDirective",
        "src": "123:25:16",
        "absolutePath": "lib/protocol/packages/core/contracts/common/implementation/MultiRole.sol",
        "file": "./MultiRole.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23107,
        "sourceUnit": 25426,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22888,
        "nodeType": "ImportDirective",
        "src": "149:42:16",
        "absolutePath": "lib/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol",
        "file": "../interfaces/ExpandedIERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23107,
        "sourceUnit": 25707,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23106,
        "nodeType": "ContractDefinition",
        "src": "348:3222:16",
        "nodes": [
          {
            "id": 22899,
            "nodeType": "EnumDefinition",
            "src": "413:214:16",
            "canonicalName": "ExpandedERC20.Roles",
            "members": [
              {
                "id": 22896,
                "name": "Owner",
                "nameLocation": "476:5:16",
                "nodeType": "EnumValue",
                "src": "476:5:16"
              },
              {
                "id": 22897,
                "name": "Minter",
                "nameLocation": "538:6:16",
                "nodeType": "EnumValue",
                "src": "538:6:16"
              },
              {
                "id": 22898,
                "name": "Burner",
                "nameLocation": "615:6:16",
                "nodeType": "EnumValue",
                "src": "615:6:16"
              }
            ],
            "name": "Roles",
            "nameLocation": "418:5:16"
          },
          {
            "id": 22901,
            "nodeType": "VariableDeclaration",
            "src": "633:15:16",
            "constant": false,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "639:9:16",
            "scope": 23106,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 22900,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "633:5:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 22971,
            "nodeType": "FunctionDefinition",
            "src": "943:459:16",
            "body": {
              "id": 22970,
              "nodeType": "Block",
              "src": "1093:309:16",
              "statements": [
                {
                  "expression": {
                    "id": 22917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22915,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22901,
                      "src": "1103:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22916,
                      "name": "_tokenDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22908,
                      "src": "1115:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1103:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 22918,
                  "nodeType": "ExpressionStatement",
                  "src": "1103:26:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22922,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "1168:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 22923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22896,
                            "src": "1168:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 22921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1160:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 22920,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1160:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1160:20:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22927,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "1190:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 22928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22896,
                            "src": "1190:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 22926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1182:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 22925,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1182:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1182:20:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 22930,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1204:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 22931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1204:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22919,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25424,
                      "src": "1139:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 22932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:76:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22933,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:76:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22937,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "1251:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 22938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22897,
                            "src": "1251:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 22936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1243:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 22935,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1243:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1243:21:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22942,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "1274:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 22943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22896,
                            "src": "1274:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 22941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1266:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 22940,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1266:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1266:20:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1302:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1288:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 22945,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1292:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 22946,
                            "nodeType": "ArrayTypeName",
                            "src": "1292:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 22949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1288:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 22934,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25371,
                      "src": "1225:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 22950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22951,
                  "nodeType": "ExpressionStatement",
                  "src": "1225:80:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22955,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "1341:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 22956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22898,
                            "src": "1341:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 22954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1333:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 22953,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1333:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1333:21:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 22960,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "1364:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 22961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22896,
                            "src": "1364:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 22959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1356:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 22958,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1356:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1356:20:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 22966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1392:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 22965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1378:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 22963,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1382:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 22964,
                            "nodeType": "ArrayTypeName",
                            "src": "1382:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 22967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:16:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 22952,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25371,
                      "src": "1315:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 22968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:80:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22969,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:80:16"
                }
              ]
            },
            "documentation": {
              "id": 22902,
              "nodeType": "StructuredDocumentation",
              "src": "655:283:16",
              "text": " @notice Constructs the ExpandedERC20.\n @param _tokenName The name which describes the new token.\n @param _tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n @param _tokenDecimals The number of decimals to define token precision."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 22911,
                    "name": "_tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22904,
                    "src": "1067:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 22912,
                    "name": "_tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22906,
                    "src": "1079:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 22913,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 22910,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21237,
                  "src": "1061:5:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1061:31:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 22909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22904,
                  "mutability": "mutable",
                  "name": "_tokenName",
                  "nameLocation": "978:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 22971,
                  "src": "964:24:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22903,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "964:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22906,
                  "mutability": "mutable",
                  "name": "_tokenSymbol",
                  "nameLocation": "1012:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 22971,
                  "src": "998:26:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22905,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "998:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22908,
                  "mutability": "mutable",
                  "name": "_tokenDecimals",
                  "nameLocation": "1040:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 22971,
                  "src": "1034:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 22907,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1034:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "954:106:16"
            },
            "returnParameters": {
              "id": 22914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1093:0:16"
            },
            "scope": 23106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22981,
            "nodeType": "FunctionDefinition",
            "src": "1408:105:16",
            "body": {
              "id": 22980,
              "nodeType": "Block",
              "src": "1480:33:16",
              "statements": [
                {
                  "expression": {
                    "id": 22978,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22901,
                    "src": "1497:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 22977,
                  "id": 22979,
                  "nodeType": "Return",
                  "src": "1490:16:16"
                }
              ]
            },
            "baseFunctions": [
              20757
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "1417:8:16",
            "overrides": {
              "id": 22974,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 22973,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21237,
                  "src": "1457:5:16"
                }
              ],
              "src": "1448:15:16"
            },
            "parameters": {
              "id": 22972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1425:2:16"
            },
            "returnParameters": {
              "id": 22977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22981,
                  "src": "1473:5:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 22975,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1472:7:16"
            },
            "scope": 23106,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 23007,
            "nodeType": "FunctionDefinition",
            "src": "1754:216:16",
            "body": {
              "id": 23006,
              "nodeType": "Block",
              "src": "1909:61:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23000,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22984,
                        "src": "1925:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23001,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22986,
                        "src": "1936:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22999,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21097,
                      "src": "1919:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23003,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:23:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 23004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1959:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 22998,
                  "id": 23005,
                  "nodeType": "Return",
                  "src": "1952:11:16"
                }
              ]
            },
            "baseFunctions": [
              25690
            ],
            "documentation": {
              "id": 22982,
              "nodeType": "StructuredDocumentation",
              "src": "1519:230:16",
              "text": " @dev Mints `value` tokens to `recipient`, returning true on success.\n @param recipient address to mint to.\n @param value amount of tokens to mint.\n @return True if the mint succeeded, or False."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 22992,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22899,
                          "src": "1867:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                            "typeString": "type(enum ExpandedERC20.Roles)"
                          }
                        },
                        "id": 22993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Minter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22897,
                        "src": "1867:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$22899",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$22899",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      ],
                      "id": 22991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1859:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 22990,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1859:7:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 22994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 22995,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22989,
                  "name": "onlyRoleHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25039,
                  "src": "1844:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1844:37:16"
              }
            ],
            "name": "mint",
            "nameLocation": "1763:4:16",
            "overrides": {
              "id": 22988,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1827:8:16"
            },
            "parameters": {
              "id": 22987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22984,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1776:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23007,
                  "src": "1768:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22986,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1795:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23007,
                  "src": "1787:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1787:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:34:16"
            },
            "returnParameters": {
              "id": 22998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23007,
                  "src": "1899:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1898:6:16"
            },
            "scope": 23106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23028,
            "nodeType": "FunctionDefinition",
            "src": "2094:126:16",
            "body": {
              "id": 23027,
              "nodeType": "Block",
              "src": "2179:41:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23022,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2195:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2195:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23024,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23010,
                        "src": "2207:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23021,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21169,
                      "src": "2189:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:24:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23026,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:24:16"
                }
              ]
            },
            "baseFunctions": [
              25670
            ],
            "documentation": {
              "id": 23008,
              "nodeType": "StructuredDocumentation",
              "src": "1976:113:16",
              "text": " @dev Burns `value` tokens owned by `msg.sender`.\n @param value amount of tokens to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23016,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22899,
                          "src": "2164:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                            "typeString": "type(enum ExpandedERC20.Roles)"
                          }
                        },
                        "id": 23017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Burner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22898,
                        "src": "2164:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$22899",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$22899",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      ],
                      "id": 23015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2156:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 23014,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2156:7:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 23018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2156:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 23019,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23013,
                  "name": "onlyRoleHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25039,
                  "src": "2141:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2141:37:16"
              }
            ],
            "name": "burn",
            "nameLocation": "2103:4:16",
            "overrides": {
              "id": 23012,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2132:8:16"
            },
            "parameters": {
              "id": 23011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23010,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2116:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23028,
                  "src": "2108:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2107:15:16"
            },
            "returnParameters": {
              "id": 23020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2179:0:16"
            },
            "scope": 23106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23054,
            "nodeType": "FunctionDefinition",
            "src": "2449:220:16",
            "body": {
              "id": 23053,
              "nodeType": "Block",
              "src": "2608:61:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23047,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23031,
                        "src": "2624:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23048,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23033,
                        "src": "2635:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23046,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21169,
                      "src": "2618:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23050,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:23:16"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 23051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2658:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 23045,
                  "id": 23052,
                  "nodeType": "Return",
                  "src": "2651:11:16"
                }
              ]
            },
            "baseFunctions": [
              25680
            ],
            "documentation": {
              "id": 23029,
              "nodeType": "StructuredDocumentation",
              "src": "2226:218:16",
              "text": " @dev Burns `value` tokens owned by `recipient`.\n @param recipient address to burn tokens from.\n @param value amount of tokens to burn.\n @return True if the burn succeeded, or False."
            },
            "functionSelector": "79cc6790",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23039,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22899,
                          "src": "2566:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                            "typeString": "type(enum ExpandedERC20.Roles)"
                          }
                        },
                        "id": 23040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Burner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22898,
                        "src": "2566:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$22899",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$22899",
                          "typeString": "enum ExpandedERC20.Roles"
                        }
                      ],
                      "id": 23038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2558:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 23037,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2558:7:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 23041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 23042,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23036,
                  "name": "onlyRoleHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25039,
                  "src": "2543:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2543:37:16"
              }
            ],
            "name": "burnFrom",
            "nameLocation": "2458:8:16",
            "overrides": {
              "id": 23035,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2526:8:16"
            },
            "parameters": {
              "id": 23034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23031,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2475:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23054,
                  "src": "2467:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2467:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23033,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2494:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23054,
                  "src": "2486:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2466:34:16"
            },
            "returnParameters": {
              "id": 23045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23044,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23054,
                  "src": "2598:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23043,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2597:6:16"
            },
            "scope": 23106,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23071,
            "nodeType": "FunctionDefinition",
            "src": "2852:120:16",
            "body": {
              "id": 23070,
              "nodeType": "Block",
              "src": "2914:58:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23064,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "2942:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 23065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22897,
                            "src": "2942:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 23063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2934:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 23062,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2934:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:21:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23067,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23057,
                        "src": "2957:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23061,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25221,
                      "src": "2924:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 23068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23069,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:41:16"
                }
              ]
            },
            "baseFunctions": [
              25695
            ],
            "documentation": {
              "id": 23055,
              "nodeType": "StructuredDocumentation",
              "src": "2675:172:16",
              "text": " @notice Add Minter role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nameLocation": "2861:9:16",
            "overrides": {
              "id": 23059,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2905:8:16"
            },
            "parameters": {
              "id": 23058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23057,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2879:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23071,
                  "src": "2871:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2870:17:16"
            },
            "returnParameters": {
              "id": 23060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2914:0:16"
            },
            "scope": 23106,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 23088,
            "nodeType": "FunctionDefinition",
            "src": "3155:120:16",
            "body": {
              "id": 23087,
              "nodeType": "Block",
              "src": "3217:58:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23081,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "3245:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 23082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22898,
                            "src": "3245:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 23080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3237:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 23079,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3237:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3237:21:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23084,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23074,
                        "src": "3260:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23078,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25221,
                      "src": "3227:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 23085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3227:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23086,
                  "nodeType": "ExpressionStatement",
                  "src": "3227:41:16"
                }
              ]
            },
            "baseFunctions": [
              25700
            ],
            "documentation": {
              "id": 23072,
              "nodeType": "StructuredDocumentation",
              "src": "2978:172:16",
              "text": " @notice Add Burner role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addBurner",
            "nameLocation": "3164:9:16",
            "overrides": {
              "id": 23076,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3208:8:16"
            },
            "parameters": {
              "id": 23075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23074,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3182:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23088,
                  "src": "3174:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3173:17:16"
            },
            "returnParameters": {
              "id": 23077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3217:0:16"
            },
            "scope": 23106,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 23105,
            "nodeType": "FunctionDefinition",
            "src": "3446:122:16",
            "body": {
              "id": 23104,
              "nodeType": "Block",
              "src": "3509:59:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23098,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22899,
                              "src": "3539:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$22899_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 23099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22896,
                            "src": "3539:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$22899",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 23097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3531:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 23096,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3531:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3531:20:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 23101,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23091,
                        "src": "3553:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23095,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25172,
                      "src": "3519:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 23102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3519:42:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23103,
                  "nodeType": "ExpressionStatement",
                  "src": "3519:42:16"
                }
              ]
            },
            "baseFunctions": [
              25705
            ],
            "documentation": {
              "id": 23089,
              "nodeType": "StructuredDocumentation",
              "src": "3281:160:16",
              "text": " @notice Reset Owner role to account.\n @dev The caller must have the Owner role.\n @param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resetOwner",
            "nameLocation": "3455:10:16",
            "overrides": {
              "id": 23093,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3500:8:16"
            },
            "parameters": {
              "id": 23092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23091,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3474:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 23105,
                  "src": "3466:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3466:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3465:17:16"
            },
            "returnParameters": {
              "id": 23094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3509:0:16"
            },
            "scope": 23106,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22890,
              "name": "ExpandedIERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25706,
              "src": "374:14:16"
            },
            "id": 22891,
            "nodeType": "InheritanceSpecifier",
            "src": "374:14:16"
          },
          {
            "baseName": {
              "id": 22892,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21237,
              "src": "390:5:16"
            },
            "id": 22893,
            "nodeType": "InheritanceSpecifier",
            "src": "390:5:16"
          },
          {
            "baseName": {
              "id": 22894,
              "name": "MultiRole",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25425,
              "src": "397:9:16"
            },
            "id": 22895,
            "nodeType": "InheritanceSpecifier",
            "src": "397:9:16"
          }
        ],
        "canonicalName": "ExpandedERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22889,
          "nodeType": "StructuredDocumentation",
          "src": "193:154:16",
          "text": " @title An ERC20 with permissioned burning and minting. The contract deployer will initially\n be the owner who is capable of adding new roles."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23106,
          25425,
          21237,
          21340,
          25706,
          21315,
          21881
        ],
        "name": "ExpandedERC20",
        "nameLocation": "357:13:16",
        "scope": 23107,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 16
}