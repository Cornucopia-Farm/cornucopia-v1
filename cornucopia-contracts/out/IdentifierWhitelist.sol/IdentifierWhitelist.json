{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "SupportedIdentifierAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "SupportedIdentifierRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "addSupportedIdentifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "isIdentifierSupported",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        }
      ],
      "name": "removeSupportedIdentifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103dc8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212202be68d3635f000fe3df4fb415c1d4669acb2750ff48394ab80fd0c291032144a64736f6c634300080d0033",
    "sourceMap": "280:2250:27:-:0;;;;;;;;;;;;-1:-1:-1;921:32:5;719:10:11;921:18:5;:32::i;:::-;280:2250:27;;2270:187:5;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:5;;;-1:-1:-1;;;;;;2378:17:5;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;280:2250:27:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806310a7e20114610067578063715018a61461007c5780638da5cb5b146100845780638e0d3ca7146100a457806390978d1b146100b7578063f2fde38b146100ea575b600080fd5b61007a610075366004610328565b6100fd565b005b61007a61018d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b61007a6100b2366004610328565b6101c3565b6100da6100c5366004610328565b60009081526001602052604090205460ff1690565b604051901515815260200161009b565b61007a6100f8366004610341565b610244565b6000546001600160a01b031633146101305760405162461bcd60e51b815260040161012790610371565b60405180910390fd5b60008181526001602052604090205460ff1661018a576000818152600160208190526040808320805460ff19169092179091555182917fa0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b27691a25b50565b6000546001600160a01b031633146101b75760405162461bcd60e51b815260040161012790610371565b6101c160006102d8565b565b6000546001600160a01b031633146101ed5760405162461bcd60e51b815260040161012790610371565b60008181526001602052604090205460ff161561018a57600081815260016020526040808220805460ff191690555182917fefdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e591a250565b6000546001600160a01b0316331461026e5760405162461bcd60e51b815260040161012790610371565b6001600160a01b0381166102d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610127565b61018a815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a57600080fd5b5035919050565b60006020828403121561035357600080fd5b81356001600160a01b038116811461036a57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212202be68d3635f000fe3df4fb415c1d4669acb2750ff48394ab80fd0c291032144a64736f6c634300080d0033",
    "sourceMap": "280:2250:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1225:254;;;;;;:::i;:::-;;:::i;:::-;;1668:101:5;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:5;;;345:51:40;;333:2;318:18;1036:85:5;;;;;;;;1742:259:27;;;;;;:::i;:::-;;:::i;2383:145::-;;;;;;:::i;:::-;2466:4;2489:32;;;:20;:32;;;;;;;;;2383:145;;;;572:14:40;;565:22;547:41;;535:2;520:18;2383:145:27;407:187:40;1918:198:5;;;;;;:::i;:::-;;:::i;1225:254:27:-;1082:7:5;1108:6;-1:-1:-1;;;;;1108:6:5;719:10:11;1248:23:5;1240:68;;;;-1:-1:-1;;;1240:68:5;;;;;;;:::i;:::-;;;;;;;;;1320:32:27::1;::::0;;;:20:::1;:32;::::0;;;;;::::1;;1315:158;;1368:32;::::0;;;1403:4:::1;1368:32;::::0;;;;;;;:39;;-1:-1:-1;;1368:39:27::1;::::0;;::::1;::::0;;;1426:36;1389:10;;1426:36:::1;::::0;::::1;1315:158;1225:254:::0;:::o;1668:101:5:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:5;719:10:11;1248:23:5;1240:68;;;;-1:-1:-1;;;1240:68:5;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1742:259:27:-;1082:7:5;1108:6;-1:-1:-1;;;;;1108:6:5;719:10:11;1248:23:5;1240:68;;;;-1:-1:-1;;;1240:68:5;;;;;;;:::i;:::-;1839:32:27::1;::::0;;;:20:::1;:32;::::0;;;;;::::1;;1835:160;;;1922:5;1887:32:::0;;;:20:::1;:32;::::0;;;;;:40;;-1:-1:-1;;1887:40:27::1;::::0;;1946:38;1908:10;;1946:38:::1;::::0;::::1;1742:259:::0;:::o;1918:198:5:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:5;719:10:11;1248:23:5;1240:68;;;;-1:-1:-1;;;1240:68:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:5;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:5;;1453:2:40;1998:73:5::1;::::0;::::1;1435:21:40::0;1492:2;1472:18;;;1465:30;1531:34;1511:18;;;1504:62;-1:-1:-1;;;1582:18:40;;;1575:36;1628:19;;1998:73:5::1;1251:402:40::0;1998:73:5::1;2081:28;2100:8;2270:187:::0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:5;;;-1:-1:-1;;;;;;2378:17:5;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:180:40:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:40;;14:180;-1:-1:-1;14:180:40:o;599:286::-;658:6;711:2;699:9;690:7;686:23;682:32;679:52;;;727:1;724;717:12;679:52;753:23;;-1:-1:-1;;;;;805:31:40;;795:42;;785:70;;851:1;848;841:12;785:70;874:5;599:286;-1:-1:-1;;;599:286:40:o;890:356::-;1092:2;1074:21;;;1111:18;;;1104:30;1170:34;1165:2;1150:18;;1143:62;1237:2;1222:18;;890:356::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addSupportedIdentifier(bytes32)": "10a7e201",
    "isIdentifierSupported(bytes32)": "90978d1b",
    "owner()": "8da5cb5b",
    "removeSupportedIdentifier(bytes32)": "8e0d3ca7",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"SupportedIdentifierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"SupportedIdentifierRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"addSupportedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"isIdentifierSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"}],\"name\":\"removeSupportedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addSupportedIdentifier(bytes32)\":{\"details\":\"Price requests using this identifier will succeed after this call.\",\"params\":{\"identifier\":\"unique UTF-8 representation for the feed being added. Eg: BTC/USD.\"}},\"isIdentifierSupported(bytes32)\":{\"params\":{\"identifier\":\"unique UTF-8 representation for the feed being queried. Eg: BTC/USD.\"},\"returns\":{\"_0\":\"bool if the identifier is supported (or not).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeSupportedIdentifier(bytes32)\":{\"details\":\"Price requests using this identifier will no longer succeed after this call.\",\"params\":{\"identifier\":\"unique UTF-8 representation for the feed being removed. Eg: BTC/USD.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Stores a whitelist of supported identifiers that the oracle can provide prices for.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addSupportedIdentifier(bytes32)\":{\"notice\":\"Adds the provided identifier as a supported identifier.\"},\"isIdentifierSupported(bytes32)\":{\"notice\":\"Checks whether an identifier is on the whitelist.\"},\"removeSupportedIdentifier(bytes32)\":{\"notice\":\"Removes the identifier from the whitelist.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol\":\"IdentifierWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\",\":uma-implementation/=lib/protocol/packages/core/contracts/oracle/implementation/\",\":uma-interface/=lib/protocol/packages/core/contracts/oracle/interfaces/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol\":{\"keccak256\":\"0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8\",\"dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt\"]},\"lib/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SupportedIdentifierAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SupportedIdentifierRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSupportedIdentifier"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIdentifierSupported",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeSupportedIdentifier"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addSupportedIdentifier(bytes32)": {
            "details": "Price requests using this identifier will succeed after this call.",
            "params": {
              "identifier": "unique UTF-8 representation for the feed being added. Eg: BTC/USD."
            }
          },
          "isIdentifierSupported(bytes32)": {
            "params": {
              "identifier": "unique UTF-8 representation for the feed being queried. Eg: BTC/USD."
            },
            "returns": {
              "_0": "bool if the identifier is supported (or not)."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "removeSupportedIdentifier(bytes32)": {
            "details": "Price requests using this identifier will no longer succeed after this call.",
            "params": {
              "identifier": "unique UTF-8 representation for the feed being removed. Eg: BTC/USD."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addSupportedIdentifier(bytes32)": {
            "notice": "Adds the provided identifier as a supported identifier."
          },
          "isIdentifierSupported(bytes32)": {
            "notice": "Checks whether an identifier is on the whitelist."
          },
          "removeSupportedIdentifier(bytes32)": {
            "notice": "Removes the identifier from the whitelist."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":protocol/=lib/protocol/",
        ":uma-implementation/=lib/protocol/packages/core/contracts/oracle/implementation/",
        ":uma-interface/=lib/protocol/packages/core/contracts/oracle/interfaces/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol": "IdentifierWhitelist"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol": {
        "keccak256": "0x77ad704fca2d76e187bbc72ed48323cf5b483dbee6c86afe023103d6fc7129eb",
        "urls": [
          "bzz-raw://6c8a7765d146c7133c5028b40b4a7a060a030425299d8d6622a06af5c44d4aa8",
          "dweb:/ipfs/QmU5TDtc3XHDgp25WxFmKbYGycY7NsT5EtHJ6DH5Q2YWgt"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol": {
        "keccak256": "0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9",
        "urls": [
          "bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3",
          "dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/protocol/packages/core/contracts/oracle/implementation/IdentifierWhitelist.sol",
    "id": 25913,
    "exportedSymbols": {
      "Context": [
        21881
      ],
      "IdentifierWhitelist": [
        25912
      ],
      "IdentifierWhitelistInterface": [
        28018
      ],
      "Ownable": [
        20682
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:2489:27",
    "nodes": [
      {
        "id": 25827,
        "nodeType": "PragmaDirective",
        "src": "42:23:27",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 25828,
        "nodeType": "ImportDirective",
        "src": "67:56:27",
        "absolutePath": "lib/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol",
        "file": "../interfaces/IdentifierWhitelistInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25913,
        "sourceUnit": 28019,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25829,
        "nodeType": "ImportDirective",
        "src": "124:52:27",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25913,
        "sourceUnit": 20683,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25912,
        "nodeType": "ContractDefinition",
        "src": "280:2250:27",
        "nodes": [
          {
            "id": 25838,
            "nodeType": "VariableDeclaration",
            "src": "496:53:27",
            "constant": false,
            "mutability": "mutable",
            "name": "supportedIdentifiers",
            "nameLocation": "529:20:27",
            "scope": 25912,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 25837,
              "keyType": {
                "id": 25835,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "504:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "496:24:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 25836,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "515:4:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 25842,
            "nodeType": "EventDefinition",
            "src": "696:59:27",
            "anonymous": false,
            "eventSelector": "a0ca1076d765c13772089a90b5121cf6ddf63c9f7891c4e5031adbc85936b276",
            "name": "SupportedIdentifierAdded",
            "nameLocation": "702:24:27",
            "parameters": {
              "id": 25841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "743:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 25842,
                  "src": "727:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25839,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "726:28:27"
            }
          },
          {
            "id": 25846,
            "nodeType": "EventDefinition",
            "src": "760:61:27",
            "anonymous": false,
            "eventSelector": "efdf15ca0f9402bd4e933b0edb0db65b23cc50d27cb010d8abcadaae4fa944e5",
            "name": "SupportedIdentifierRemoved",
            "nameLocation": "766:26:27",
            "parameters": {
              "id": 25845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25844,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "809:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 25846,
                  "src": "793:26:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25843,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:28:27"
            }
          },
          {
            "id": 25872,
            "nodeType": "FunctionDefinition",
            "src": "1225:254:27",
            "body": {
              "id": 25871,
              "nodeType": "Block",
              "src": "1305:174:27",
              "statements": [
                {
                  "condition": {
                    "id": 25858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1319:33:27",
                    "subExpression": {
                      "baseExpression": {
                        "id": 25855,
                        "name": "supportedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25838,
                        "src": "1320:20:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 25857,
                      "indexExpression": {
                        "id": 25856,
                        "name": "identifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25849,
                        "src": "1341:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1320:32:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25870,
                  "nodeType": "IfStatement",
                  "src": "1315:158:27",
                  "trueBody": {
                    "id": 25869,
                    "nodeType": "Block",
                    "src": "1354:119:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 25863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 25859,
                              "name": "supportedIdentifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25838,
                              "src": "1368:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 25861,
                            "indexExpression": {
                              "id": 25860,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25849,
                              "src": "1389:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1368:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 25862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1403:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1368:39:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25864,
                        "nodeType": "ExpressionStatement",
                        "src": "1368:39:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 25866,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25849,
                              "src": "1451:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 25865,
                            "name": "SupportedIdentifierAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25842,
                            "src": "1426:24:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 25867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1426:36:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25868,
                        "nodeType": "EmitStatement",
                        "src": "1421:41:27"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              28003
            ],
            "documentation": {
              "id": 25847,
              "nodeType": "StructuredDocumentation",
              "src": "967:253:27",
              "text": " @notice Adds the provided identifier as a supported identifier.\n @dev Price requests using this identifier will succeed after this call.\n @param identifier unique UTF-8 representation for the feed being added. Eg: BTC/USD."
            },
            "functionSelector": "10a7e201",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25853,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25852,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20624,
                  "src": "1295:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "1295:9:27"
              }
            ],
            "name": "addSupportedIdentifier",
            "nameLocation": "1234:22:27",
            "overrides": {
              "id": 25851,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1286:8:27"
            },
            "parameters": {
              "id": 25850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25849,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1265:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 25872,
                  "src": "1257:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25848,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1256:20:27"
            },
            "returnParameters": {
              "id": 25854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:0:27"
            },
            "scope": 25912,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25897,
            "nodeType": "FunctionDefinition",
            "src": "1742:259:27",
            "body": {
              "id": 25896,
              "nodeType": "Block",
              "src": "1825:176:27",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 25881,
                      "name": "supportedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25838,
                      "src": "1839:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 25883,
                    "indexExpression": {
                      "id": 25882,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25875,
                      "src": "1860:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1839:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25895,
                  "nodeType": "IfStatement",
                  "src": "1835:160:27",
                  "trueBody": {
                    "id": 25894,
                    "nodeType": "Block",
                    "src": "1873:122:27",
                    "statements": [
                      {
                        "expression": {
                          "id": 25888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 25884,
                              "name": "supportedIdentifiers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25838,
                              "src": "1887:20:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 25886,
                            "indexExpression": {
                              "id": 25885,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25875,
                              "src": "1908:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1887:32:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 25887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1922:5:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1887:40:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25889,
                        "nodeType": "ExpressionStatement",
                        "src": "1887:40:27"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 25891,
                              "name": "identifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25875,
                              "src": "1973:10:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 25890,
                            "name": "SupportedIdentifierRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25846,
                            "src": "1946:26:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 25892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1946:38:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25893,
                        "nodeType": "EmitStatement",
                        "src": "1941:43:27"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              28009
            ],
            "documentation": {
              "id": 25873,
              "nodeType": "StructuredDocumentation",
              "src": "1485:252:27",
              "text": " @notice Removes the identifier from the whitelist.\n @dev Price requests using this identifier will no longer succeed after this call.\n @param identifier unique UTF-8 representation for the feed being removed. Eg: BTC/USD."
            },
            "functionSelector": "8e0d3ca7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25878,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20624,
                  "src": "1815:9:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "1815:9:27"
              }
            ],
            "name": "removeSupportedIdentifier",
            "nameLocation": "1751:25:27",
            "overrides": {
              "id": 25877,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1806:8:27"
            },
            "parameters": {
              "id": 25876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25875,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1785:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 25897,
                  "src": "1777:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25874,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1776:20:27"
            },
            "returnParameters": {
              "id": 25880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:0:27"
            },
            "scope": 25912,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25911,
            "nodeType": "FunctionDefinition",
            "src": "2383:145:27",
            "body": {
              "id": 25910,
              "nodeType": "Block",
              "src": "2472:56:27",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 25906,
                      "name": "supportedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25838,
                      "src": "2489:20:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 25908,
                    "indexExpression": {
                      "id": 25907,
                      "name": "identifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25900,
                      "src": "2510:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2489:32:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 25905,
                  "id": 25909,
                  "nodeType": "Return",
                  "src": "2482:39:27"
                }
              ]
            },
            "baseFunctions": [
              28017
            ],
            "documentation": {
              "id": 25898,
              "nodeType": "StructuredDocumentation",
              "src": "2147:231:27",
              "text": " @notice Checks whether an identifier is on the whitelist.\n @param identifier unique UTF-8 representation for the feed being queried. Eg: BTC/USD.\n @return bool if the identifier is supported (or not)."
            },
            "functionSelector": "90978d1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIdentifierSupported",
            "nameLocation": "2392:21:27",
            "overrides": {
              "id": 25902,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2448:8:27"
            },
            "parameters": {
              "id": 25901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25900,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2422:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 25911,
                  "src": "2414:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25899,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2414:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2413:20:27"
            },
            "returnParameters": {
              "id": 25905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25911,
                  "src": "2466:4:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25903,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2466:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2465:6:27"
            },
            "scope": 25912,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25831,
              "name": "IdentifierWhitelistInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28018,
              "src": "312:28:27"
            },
            "id": 25832,
            "nodeType": "InheritanceSpecifier",
            "src": "312:28:27"
          },
          {
            "baseName": {
              "id": 25833,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20682,
              "src": "342:7:27"
            },
            "id": 25834,
            "nodeType": "InheritanceSpecifier",
            "src": "342:7:27"
          }
        ],
        "canonicalName": "IdentifierWhitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25830,
          "nodeType": "StructuredDocumentation",
          "src": "178:101:27",
          "text": " @title Stores a whitelist of supported identifiers that the oracle can provide prices for."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25912,
          20682,
          21881,
          28018
        ],
        "name": "IdentifierWhitelist",
        "nameLocation": "289:19:27",
        "scope": 25913,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 27
}