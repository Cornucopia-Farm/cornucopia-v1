{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getPrice(bytes32,uint256,bytes)": "719c6d56",
    "hasPrice(bytes32,uint256,bytes)": "b551cd50",
    "requestPrice(bytes32,uint256,bytes)": "216666a4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface used by financial contracts to interact with the Oracle. Voters will use a different interface.\",\"kind\":\"dev\",\"methods\":{\"getPrice(bytes32,uint256,bytes)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"int256 representing the resolved price for the given identifier and timestamp.\"}},\"hasPrice(bytes32,uint256,bytes)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"requestPrice(bytes32,uint256,bytes)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"}}},\"title\":\"Financial contract facing Oracle interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice(bytes32,uint256,bytes)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"hasPrice(bytes32,uint256,bytes)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"requestPrice(bytes32,uint256,bytes)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol\":\"OracleAncillaryInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":protocol/=lib/protocol/\",\":uma-implementation/=lib/protocol/packages/core/contracts/oracle/implementation/\",\":uma-interface/=lib/protocol/packages/core/contracts/oracle/interfaces/\"]},\"sources\":{\"lib/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc\",\"dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPrice",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPrice",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requestPrice"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getPrice(bytes32,uint256,bytes)": {
            "details": "If the price is not available, the method reverts.",
            "params": {
              "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
              "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
              "time": "unix timestamp for the price request."
            },
            "returns": {
              "_0": "int256 representing the resolved price for the given identifier and timestamp."
            }
          },
          "hasPrice(bytes32,uint256,bytes)": {
            "details": "Time must be in the past and the identifier must be supported.",
            "params": {
              "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
              "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
              "time": "unix timestamp for the price request."
            },
            "returns": {
              "_0": "bool if the DVM has resolved to a price for the given identifier and timestamp."
            }
          },
          "requestPrice(bytes32,uint256,bytes)": {
            "details": "Time must be in the past and the identifier must be supported.",
            "params": {
              "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
              "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
              "time": "unix timestamp for the price request."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getPrice(bytes32,uint256,bytes)": {
            "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
          },
          "hasPrice(bytes32,uint256,bytes)": {
            "notice": "Whether the price for `identifier` and `time` is available."
          },
          "requestPrice(bytes32,uint256,bytes)": {
            "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":protocol/=lib/protocol/",
        ":uma-implementation/=lib/protocol/packages/core/contracts/oracle/implementation/",
        ":uma-interface/=lib/protocol/packages/core/contracts/oracle/interfaces/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol": "OracleAncillaryInterface"
      },
      "libraries": {}
    },
    "sources": {
      "lib/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol": {
        "keccak256": "0xd58b41fe1e389f7871db7c04f2c05c1aac1d0455bbc521534da81fd657016a1f",
        "urls": [
          "bzz-raw://cc532e9c550bb1bba0daa33fda748590cd06ce94a9566fe65dac04e7d40977bc",
          "dweb:/ipfs/QmZKvfRW2LJFt5MWZbKuU9ujkXnS2hkPUJVj8wwJWcuZGX"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol",
    "id": 28295,
    "exportedSymbols": {
      "OracleAncillaryInterface": [
        28294
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:2306:34",
    "nodes": [
      {
        "id": 28258,
        "nodeType": "PragmaDirective",
        "src": "42:23:34",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28294,
        "nodeType": "ContractDefinition",
        "src": "243:2104:34",
        "nodes": [
          {
            "id": 28269,
            "nodeType": "FunctionDefinition",
            "src": "788:129:34",
            "documentation": {
              "id": 28260,
              "nodeType": "StructuredDocumentation",
              "src": "292:490:34",
              "text": " @notice Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @param time unix timestamp for the price request."
            },
            "functionSelector": "216666a4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "requestPrice",
            "nameLocation": "797:12:34",
            "parameters": {
              "id": 28267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28262,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "827:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28269,
                  "src": "819:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28261,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28264,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "855:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28269,
                  "src": "847:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28266,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "882:13:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28269,
                  "src": "869:26:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28265,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "809:92:34"
            },
            "returnParameters": {
              "id": 28268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "916:0:34"
            },
            "scope": 28294,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28281,
            "nodeType": "FunctionDefinition",
            "src": "1476:145:34",
            "documentation": {
              "id": 28270,
              "nodeType": "StructuredDocumentation",
              "src": "923:548:34",
              "text": " @notice Whether the price for `identifier` and `time` is available.\n @dev Time must be in the past and the identifier must be supported.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @return bool if the DVM has resolved to a price for the given identifier and timestamp."
            },
            "functionSelector": "b551cd50",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPrice",
            "nameLocation": "1485:8:34",
            "parameters": {
              "id": 28277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28272,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "1511:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28281,
                  "src": "1503:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28271,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28274,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "1539:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28281,
                  "src": "1531:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28276,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "1566:13:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28281,
                  "src": "1553:26:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28275,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:92:34"
            },
            "returnParameters": {
              "id": 28280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28279,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28281,
                  "src": "1615:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28278,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1614:6:34"
            },
            "scope": 28294,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28293,
            "nodeType": "FunctionDefinition",
            "src": "2198:147:34",
            "documentation": {
              "id": 28282,
              "nodeType": "StructuredDocumentation",
              "src": "1627:565:34",
              "text": " @notice Gets the price for `identifier` and `time` if it has already been requested and resolved.\n @dev If the price is not available, the method reverts.\n @param identifier uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\n @param time unix timestamp for the price request.\n @param ancillaryData arbitrary data appended to a price request to give the voters more info from the caller.\n @return int256 representing the resolved price for the given identifier and timestamp."
            },
            "functionSelector": "719c6d56",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "2207:8:34",
            "parameters": {
              "id": 28289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28284,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nameLocation": "2233:10:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28293,
                  "src": "2225:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28283,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28286,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "2261:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28293,
                  "src": "2253:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2253:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28288,
                  "mutability": "mutable",
                  "name": "ancillaryData",
                  "nameLocation": "2288:13:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 28293,
                  "src": "2275:26:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28287,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2215:92:34"
            },
            "returnParameters": {
              "id": 28292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28293,
                  "src": "2337:6:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 28290,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2336:8:34"
            },
            "scope": 28294,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "OracleAncillaryInterface",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28259,
          "nodeType": "StructuredDocumentation",
          "src": "67:175:34",
          "text": " @title Financial contract facing Oracle interface.\n @dev Interface used by financial contracts to interact with the Oracle. Voters will use a different interface."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          28294
        ],
        "name": "OracleAncillaryInterface",
        "nameLocation": "261:24:34",
        "scope": 28295,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 34
}