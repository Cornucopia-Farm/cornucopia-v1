/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../../common";
import type {
  SkinnyOptimisticOracleProd,
  SkinnyOptimisticOracleProdInterface,
} from "../../../../../../../../../lib/protocol/packages/core/contracts/optimistic-oracle/previous-versions/SkinnyOptimisticOracle.sol/SkinnyOptimisticOracleProd";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_liveness",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_finderAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_timerAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "DisputePrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "ProposePrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "RequestPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "Settle",
    type: "event",
  },
  {
    inputs: [],
    name: "ancillaryBytesLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultLiveness",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "disputePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "disputer",
        type: "address",
      },
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "disputePriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finder",
    outputs: [
      {
        internalType: "contract FinderInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "getState",
    outputs: [
      {
        internalType: "enum OptimisticOracleInterface.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "hasPrice",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "proposedPrice",
        type: "int256",
      },
    ],
    name: "proposePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "int256",
        name: "proposedPrice",
        type: "int256",
      },
    ],
    name: "proposePriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        internalType: "contract IERC20",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "customLiveness",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "int256",
        name: "proposedPrice",
        type: "int256",
      },
    ],
    name: "requestAndProposePriceFor",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        internalType: "contract IERC20",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "customLiveness",
        type: "uint256",
      },
    ],
    name: "requestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "totalBond",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "setCurrentTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "address",
            name: "disputer",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "currency",
            type: "address",
          },
          {
            internalType: "bool",
            name: "settled",
            type: "bool",
          },
          {
            internalType: "int256",
            name: "proposedPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "resolvedPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expirationTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bond",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "customLiveness",
            type: "uint256",
          },
        ],
        internalType: "struct SkinnyOptimisticOracleInterface.Request",
        name: "request",
        type: "tuple",
      },
    ],
    name: "settle",
    outputs: [
      {
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "resolvedPrice",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "ancillaryData",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "requester",
        type: "address",
      },
    ],
    name: "stampAncillaryData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "timerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002d8538038062002d85833981016040819052620000349162000150565b60008054600160a01b6001600160a01b038481166001600160a81b03199093169290921717909155600280546001600160a01b031916918416919091179055828282620000818362000090565b50506003555062000191915050565b63bb7448008110620000de5760405162461bcd60e51b81526020600482015260126024820152714c6976656e65737320746f6f206c6172676560701b60448201526064015b60405180910390fd5b60008111620001305760405162461bcd60e51b815260206004820152601460248201527f4c6976656e6573732063616e6e6f7420626520300000000000000000000000006044820152606401620000d5565b50565b80516001600160a01b03811681146200014b57600080fd5b919050565b6000806000606084860312156200016657600080fd5b83519250620001786020850162000133565b9150620001886040850162000133565b90509250925092565b612be480620001a16000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063a337e1ad116100a2578063b730539f11610071578063b730539f14610247578063b9a3c84c1461026f578063c371dda714610282578063d62284071461028b578063fe4e19831461029e57600080fd5b8063a337e1ad146101de578063af355d1e14610201578063af5d2f3914610214578063b1a166b21461023457600080fd5b806351205554116100de578063512055541461017857806393c44ef7146101985780639ce320c8146101ab5780639d866985146101be57600080fd5b80631c39c38d1461011057806322f8e5661461014057806329cb924d146101555780633a31577e14610165575b600080fd5b600054610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61015361014e366004612240565b6102a7565b005b425b604051908152602001610137565b610157610173366004612428565b61031d565b61018b610186366004612428565b610339565b60405161013791906124bb565b6101576101a63660046124e3565b610362565b6101576101b9366004612569565b610380565b6101576101cc366004612240565b60016020526000908152604090205481565b6101f16101ec366004612428565b610745565b6040519015158152602001610137565b61015761020f3660046125fb565b6107db565b6102276102223660046126a1565b610d19565b6040516101379190612743565b610157610242366004612756565b610d2e565b61025a610255366004612428565b610fcf565b60408051928352602083019190915201610137565b600254610123906001600160a01b031681565b61015761200081565b6101576102993660046127f3565b611005565b61015760035481565b6000546001600160a01b03166102bc57600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b5050505050565b600061032d85858585338b610380565b90505b95945050505050565b60006103436113de565b61034b611439565b6103588686868686611448565b9050610330611555565b600061037387878787873388610d2e565b90505b9695505050505050565b600061038a6113de565b610392611439565b6001600160a01b0383166103ed5760405162461bcd60e51b815260206004820152601e60248201527f64697370757465722061646472657373206d757374206265206e6f6e2030000060448201526064015b60405180910390fd5b60026103fc8389898989611448565b600681111561040d5761040d6124a5565b1461044d5760405162461bcd60e51b815260206004820152601060248201526f135d5cdd081899481c1c9bdc1bdcd95960821b60448201526064016103e4565b600061045b8389898961156a565b905061046781866115a4565b600060405180610160016040528087600001516001600160a01b03168152602001866001600160a01b0316815260200187604001516001600160a01b03168152602001876060015115158152602001876080015181526020018760a0015181526020018760c0015181526020018760e0015181526020018761010001518152602001876101200151815260200187610140015181525090506105098282611633565b61010086015161012087015161051e91611652565b92508215610540576040860151610540906001600160a01b031633308661165e565b600061054a6116cf565b905060006105578361174a565b90506000610573828a610100015161165290919063ffffffff16565b90508015610611576040890151610594906001600160a01b0316848361175e565b61059c6116cf565b60408a8101518151602081018352848152915163432ce91960e11b81526001600160a01b039182166004820152915160248301529190911690638659d23290604401600060405180830381600087803b1580156105f857600080fd5b505af115801561060c573d6000803e3d6000fd5b505050505b505061061b611810565b6001600160a01b031663216666a48b8b6106358c8a61184a565b6040518463ffffffff1660e01b815260040161065393929190612878565b600060405180830381600087803b15801561066d57600080fd5b505af1158015610681573d6000803e3d6000fd5b5050505089856001600160a01b03167f2d2ed23d7d2e875b405c36213cc1668e3adf8b4d845653bd9f977c313d599ffe8b8b866040516106c39392919061293e565b60405180910390a36001600160a01b0385163b1561073a576040516308dd6a0560e11b81526001600160a01b038616906311bad40a9061070d908d908d908d90889060040161296e565b600060405180830381600087803b15801561072757600080fd5b505af1925050508015610738575060015b505b505050610376611555565b600061074f6113de565b610757611439565b60006107658787878761156a565b905061077181846115a4565b60006107808888888888611448565b90506006816006811115610796576107966124a5565b14806107b3575060058160068111156107b1576107b16124a5565b145b806107cf575060038160068111156107cd576107cd6124a5565b145b92505050610330611555565b60006107e56113de565b6107ed611439565b60006107fb338c8c8c61156a565b6000818152600160205260409020549091501561085a5760405162461bcd60e51b815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a6564000000000060448201526064016103e4565b6001600160a01b0384166108b05760405162461bcd60e51b815260206004820152601e60248201527f70726f706f7365722061646472657373206d757374206265206e6f6e2030000060448201526064016103e4565b6108b861187a565b6001600160a01b03166390978d1b8c6040518263ffffffff1660e01b81526004016108e591815260200190565b602060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092691906129a4565b61096b5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b60448201526064016103e4565b6109736118c1565b604051631d1d5b3960e11b81526001600160a01b038a811660048301529190911690633a3ab67290602401602060405180830381865afa1580156109bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109df91906129a4565b610a225760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b60448201526064016103e4565b428a63ffffffff161115610a6e5760405162461bcd60e51b815260206004820152601360248201527254696d657374616d7020696e2066757475726560681b60448201526064016103e4565b612000610a7b8a3361184a565b511115610ac45760405162461bcd60e51b8152602060048201526017602482015276416e63696c6c617279204461746120746f6f206c6f6e6760481b60448201526064016103e4565b6000610ace6116cf565b604051635b97aadd60e01b81526001600160a01b038b811660048301529190911690635b97aadd90602401602060405180830381865afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a91906129c8565b519050610b456121c9565b6001600160a01b038a16604082015260e0810189905261010081018290526000889003610b725781610b74565b875b61012082015261014081018790526001600160a01b038616815260808101859052610bb36000889003610ba957600354610bab565b875b425b90611652565b60c0820152610bc28382611633565b8815610bdd57610bdd6001600160a01b038b1633308c61165e565b610100810151610120820151610bf291611652565b93508315610c0f57610c0f6001600160a01b038b1633308761165e565b8c336001600160a01b03167f6f8b57987b901f40681c863d8aed32c2cc6150062aa4ddb828c89aaa896c16688e8e85604051610c4d9392919061293e565b60405180910390a38c336001600160a01b03167fdb27b6b59f934dc351fe9188a12f94a06c3c867c683c6e65c7e2b4c8aa6e9a048e8e85604051610c939392919061293e565b60405180910390a3333b15610d0157336001600160a01b031663724f18148e8e8e856040518563ffffffff1660e01b8152600401610cd4949392919061296e565b600060405180830381600087803b158015610cee57600080fd5b505af1925050508015610cff575060015b505b505050610d0c611555565b9998505050505050505050565b6060610d25838361184a565b90505b92915050565b6000610d386113de565b610d40611439565b6001600160a01b038316610d965760405162461bcd60e51b815260206004820152601e60248201527f50726f706f7365722061646472657373206d757374206265206e6f6e2030000060448201526064016103e4565b6001610da58989898989611448565b6006811115610db657610db66124a5565b14610df75760405162461bcd60e51b8152602060048201526011602482015270135d5cdd081899481c995c5d595cdd1959607a1b60448201526064016103e4565b6000610e058989898961156a565b9050610e1181866115a4565b6000604051806101600160405280866001600160a01b0316815260200187602001516001600160a01b0316815260200187604001516001600160a01b031681526020018760600151151581526020018581526020018760a001518152602001610e94886101400151600003610e8857600354610bab565b61014089015142610bad565b81526020018760e001518152602001876101000151815260200187610120015181526020018761014001518152509050610ece8282611633565b610100860151610120870151610ee391611652565b92508215610f05576040860151610f05906001600160a01b031633308661165e565b888a6001600160a01b03167fdb27b6b59f934dc351fe9188a12f94a06c3c867c683c6e65c7e2b4c8aa6e9a048a8a85604051610f439392919061293e565b60405180910390a36001600160a01b038a163b15610fba57604051631c93c60560e21b81526001600160a01b038b169063724f181490610f8d908c908c908c90879060040161296e565b600060405180830381600087803b158015610fa757600080fd5b505af1925050508015610fb8575060015b505b5050610fc4611555565b979650505050505050565b600080610fda6113de565b610fe2611439565b610fef8787878787611908565b91509150610ffb611555565b9550959350505050565b600061100f6113de565b611017611439565b6000611025338a8a8a61156a565b600081815260016020526040902054909150156110845760405162461bcd60e51b815260206004820152601b60248201527f5265717565737420616c726561647920696e697469616c697a6564000000000060448201526064016103e4565b61108c61187a565b6001600160a01b03166390978d1b8a6040518263ffffffff1660e01b81526004016110b991815260200190565b602060405180830381865afa1580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa91906129a4565b61113f5760405162461bcd60e51b81526020600482015260166024820152752ab739bab83837b93a32b21034b232b73a34b334b2b960511b60448201526064016103e4565b6111476118c1565b604051631d1d5b3960e11b81526001600160a01b0388811660048301529190911690633a3ab67290602401602060405180830381865afa15801561118f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b391906129a4565b6111f65760405162461bcd60e51b8152602060048201526014602482015273556e737570706f727465642063757272656e637960601b60448201526064016103e4565b428863ffffffff1611156112425760405162461bcd60e51b815260206004820152601360248201527254696d657374616d7020696e2066757475726560681b60448201526064016103e4565b61200061124f883361184a565b5111156112985760405162461bcd60e51b8152602060048201526017602482015276416e63696c6c617279204461746120746f6f206c6f6e6760481b60448201526064016103e4565b60006112a26116cf565b604051635b97aadd60e01b81526001600160a01b0389811660048301529190911690635b97aadd90602401602060405180830381865afa1580156112ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130e91906129c8565b5190506113196121c9565b6001600160a01b038816604082015260e08101879052610100810182905260008690036113465781611348565b855b61012082015261014081018590526113608382611633565b861561137b5761137b6001600160a01b03891633308a61165e565b8a336001600160a01b03167f6f8b57987b901f40681c863d8aed32c2cc6150062aa4ddb828c89aaa896c16688c8c856040516113b99392919061293e565b60405180910390a36101208101516113d19083611652565b9350505050610fc4611555565b600054600160a01b900460ff166114375760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103e4565b565b6000805460ff60a01b19169055565b60408101516000906001600160a01b031661146557506000610330565b81516001600160a01b031661147c57506001610330565b81606001511561148e57506006610330565b60208201516001600160a01b03166114bd57428260c0015111156114b35760026114b6565b60035b9050610330565b6114c5611810565b6001600160a01b031663b551cd5086866114df878b61184a565b6040518463ffffffff1660e01b81526004016114fd93929190612878565b602060405180830381865afa15801561151a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153e91906129a4565b61154957600461032d565b50600595945050505050565b6000805460ff60a01b1916600160a01b179055565b6000848484846040516020016115839493929190612a0a565b6040516020818303038152906040528051906020012090505b949350505050565b6115ad81611c6f565b6000838152600160205260409020541461162f5760405162461bcd60e51b815260206004820152603860248201527f486173686564207265717565737420706172616d7320646f206e6f74206d617460448201527f6368206578697374696e6720726571756573742068617368000000000000000060648201526084016103e4565b5050565b61163c81611c6f565b6000928352600160205260409092209190915550565b6000610d258284612a53565b6040516001600160a01b03808516602483015283166044820152606481018290526116c99085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611c9f565b50505050565b6002546040516302abf57960e61b81526453746f726560d81b60048201526000916001600160a01b03169063aafd5e40906024015b602060405180830381865afa158015611721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117459190612a66565b905090565b610120810151600090610d28906002611d76565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156117af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d39190612a83565b6117dd9190612a53565b6040516001600160a01b0385166024820152604481018290529091506116c990859063095ea7b360e01b90606401611692565b6002546040516302abf57960e61b8152654f7261636c6560d01b60048201526000916001600160a01b03169063aafd5e4090602401611704565b6060610d25836040518060400160405280600b81526020016a37b7a932b8bab2b9ba32b960a91b81525084611d82565b6002546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401611704565b6002546040516302abf57960e61b81527210dbdb1b185d195c985b15da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e4090602401611704565b60008060006119198888888861156a565b905061192581856115a4565b600060405180610160016040528086600001516001600160a01b0316815260200186602001516001600160a01b0316815260200186604001516001600160a01b03168152602001600115158152602001866080015181526020018660a0015181526020018660c0015181526020018660e00151815260200186610100015181526020018661012001518152602001866101400151815250905060006119cd8a8a8a8a8a611448565b905060038160068111156119e3576119e36124a5565b03611a3857608086015160a0830181905260e0870151610100880151610120890151929650611a1592610bad91611652565b86516040880151919650611a33916001600160a01b03169087611dc8565b611ba3565b6005816006811115611a4c57611a4c6124a5565b03611b5157611a59611810565b6001600160a01b031663719c6d568a8a611a738b8f61184a565b6040518463ffffffff1660e01b8152600401611a9193929190612878565b602060405180830381865afa158015611aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad29190612a83565b60a08301819052608087015160e08801516101008901519296509086141591611b1f9190610bad9081611b13611b078961174a565b6101208e015190611df8565b6101208d015190611652565b9550611b4b81611b30578751611b36565b87602001515b60408901516001600160a01b03169088611dc8565b50611ba3565b60405162461bcd60e51b815260206004820152602160248201527f416c726561647920736574746c6564206f72206e6f7420736574746c6561626c6044820152606560f81b60648201526084016103e4565b611bad8383611633565b888a6001600160a01b03167f0a9a88a76857159cb49d0944fe45537825a67ea75e0df805097782be5bdcd0af8a8a86604051611beb9392919061293e565b60405180910390a36001600160a01b038a163b15611c625760405163413f3f9f60e11b81526001600160a01b038b169063827e7f3e90611c35908c908c908c90889060040161296e565b600060405180830381600087803b158015611c4f57600080fd5b505af1925050508015611c60575060015b505b5050509550959350505050565b600081604051602001611c829190612a9c565b604051602081830303815290604052805190602001209050919050565b6000611cf4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e049092919063ffffffff16565b805190915015611d715780806020019051810190611d1291906129a4565b611d715760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103e4565b505050565b6000610d258284612ac1565b60606000611d908585611e13565b90508481611d9d85611e55565b604051602001611daf93929190612ae3565b6040516020818303038152906040529150509392505050565b6040516001600160a01b038316602482015260448101829052611d7190849063a9059cbb60e01b90606401611692565b6000610d258284612b26565b606061159c8484600085611ec2565b815160609015611e445781604051602001611e2e9190612b39565b6040516020818303038152906040529050610d28565b81604051602001611e2e9190612b6d565b6060611e6d6001600160801b03602084901c16611f92565b611e888360601b6bffffffffffffffffffffffff1916611f92565b604051602001611eac9291909182526001600160c01b031916602082015260280190565b6040516020818303038152906040529050919050565b606082471015611f235760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103e4565b600080866001600160a01b03168587604051611f3f9190612b92565b60006040518083038185875af1925050503d8060008114611f7c576040519150601f19603f3d011682016040523d82523d6000602084013e611f81565b606091505b5091509150610fc48783838761212b565b6000808260001c9050806001600160801b03169050806801000000000000000002811777ffffffffffffffff0000000000000000ffffffffffffffff169050806401000000000281177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff16905080620100000281177dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff169050806101000281177eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff1690508060100281177f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f16905060006008827f080808080808080808080808080808080808080808080808080808080808080816816120ad576120ad612aab565b0460047f040404040404040404040404040404040404040404040404040404040404040484160460027f020202020202020202020202020202020202020202020202020202020202020285160417166027029091017f3030303030303030303030303030303030303030303030303030303030303030019392505050565b6060831561219a578251600003612193576001600160a01b0385163b6121935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e4565b508161159c565b61159c83838151156121af5781518083602001fd5b8060405162461bcd60e51b81526004016103e49190612743565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600015158152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60006020828403121561225257600080fd5b5035919050565b6001600160a01b038116811461226e57600080fd5b50565b803561227c81612259565b919050565b803563ffffffff8116811461227c57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156122cf576122cf612295565b60405290565b600082601f8301126122e657600080fd5b813567ffffffffffffffff8082111561230157612301612295565b604051601f8301601f19908116603f0116810190828211818310171561232957612329612295565b8160405283815286602085880101111561234257600080fd5b836020870160208301376000602085830101528094505050505092915050565b801515811461226e57600080fd5b803561227c81612362565b6000610160828403121561238e57600080fd5b6123966122ab565b90506123a182612271565b81526123af60208301612271565b60208201526123c060408301612271565b60408201526123d160608301612370565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b60008060008060006101e0868803121561244157600080fd5b853561244c81612259565b94506020860135935061246160408701612281565b9250606086013567ffffffffffffffff81111561247d57600080fd5b612489888289016122d5565b925050612499876080880161237b565b90509295509295909350565b634e487b7160e01b600052602160045260246000fd5b60208101600783106124dd57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060008061020087890312156124fd57600080fd5b863561250881612259565b95506020870135945061251d60408801612281565b9350606087013567ffffffffffffffff81111561253957600080fd5b61254589828a016122d5565b935050612555886080890161237b565b91506101e087013590509295509295509295565b600080600080600080610200878903121561258357600080fd5b8635955061259360208801612281565b9450604087013567ffffffffffffffff8111156125af57600080fd5b6125bb89828a016122d5565b9450506125cb886060890161237b565b92506101c08701356125dc81612259565b91506101e08701356125ed81612259565b809150509295509295509295565b60008060008060008060008060006101208a8c03121561261a57600080fd5b8935985061262a60208b01612281565b975060408a013567ffffffffffffffff81111561264657600080fd5b6126528c828d016122d5565b97505060608a013561266381612259565b955060808a0135945060a08a0135935060c08a0135925060e08a013561268881612259565b809250506101008a013590509295985092959850929598565b600080604083850312156126b457600080fd5b823567ffffffffffffffff8111156126cb57600080fd5b6126d7858286016122d5565b92505060208301356126e881612259565b809150509250929050565b60005b8381101561270e5781810151838201526020016126f6565b50506000910152565b6000815180845261272f8160208601602086016126f3565b601f01601f19169290920160200192915050565b602081526000610d256020830184612717565b6000806000806000806000610220888a03121561277257600080fd5b873561277d81612259565b96506020880135955061279260408901612281565b9450606088013567ffffffffffffffff8111156127ae57600080fd5b6127ba8a828b016122d5565b9450506127ca8960808a0161237b565b92506101e08801356127db81612259565b80925050610200880135905092959891949750929550565b600080600080600080600060e0888a03121561280e57600080fd5b8735965061281e60208901612281565b9550604088013567ffffffffffffffff81111561283a57600080fd5b6128468a828b016122d5565b955050606088013561285781612259565b9699959850939660808101359560a0820135955060c0909101359350915050565b83815263ffffffff831660208201526060604082015260006103306060830184612717565b80516001600160a01b0316825260208101516128c460208401826001600160a01b03169052565b5060408101516128df60408401826001600160a01b03169052565b5060608101516128f3606084018215159052565b506080818101519083015260a0808201519083015260c0808201519083015260e080820151908301526101008082015190830152610120808201519083015261014090810151910152565b60006101a063ffffffff8616835280602084015261295e81840186612717565b91505061159c604083018461289d565b60006101c086835263ffffffff8616602084015280604084015261299481840186612717565b915050610330606083018461289d565b6000602082840312156129b657600080fd5b81516129c181612362565b9392505050565b6000602082840312156129da57600080fd5b6040516020810181811067ffffffffffffffff821117156129fd576129fd612295565b6040529151825250919050565b60018060a01b038516815283602082015263ffffffff8316604082015260806060820152600061032d6080830184612717565b634e487b7160e01b600052601160045260246000fd5b80820180821115610d2857610d28612a3d565b600060208284031215612a7857600080fd5b81516129c181612259565b600060208284031215612a9557600080fd5b5051919050565b6101608101610d28828461289d565b634e487b7160e01b600052601260045260246000fd5b600082612ade57634e487b7160e01b600052601260045260246000fd5b500490565b60008451612af58184602089016126f3565b845190830190612b098183602089016126f3565b8451910190612b1c8183602088016126f3565b0195945050505050565b81810381811115610d2857610d28612a3d565b600b60fa1b815260008251612b558160018501602087016126f3565b601d60f91b6001939091019283015250600201919050565b60008251612b7f8184602087016126f3565b601d60f91b920191825250600101919050565b60008251612ba48184602087016126f3565b919091019291505056fea2646970667358221220c7b57935a3c89eb44d581a73d9a3aa2a8bcb888654779dca3a04bc508519ac6964736f6c63430008110033";

type SkinnyOptimisticOracleProdConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SkinnyOptimisticOracleProdConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SkinnyOptimisticOracleProd__factory extends ContractFactory {
  constructor(...args: SkinnyOptimisticOracleProdConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _liveness: PromiseOrValue<BigNumberish>,
    _finderAddress: PromiseOrValue<string>,
    _timerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SkinnyOptimisticOracleProd> {
    return super.deploy(
      _liveness,
      _finderAddress,
      _timerAddress,
      overrides || {}
    ) as Promise<SkinnyOptimisticOracleProd>;
  }
  override getDeployTransaction(
    _liveness: PromiseOrValue<BigNumberish>,
    _finderAddress: PromiseOrValue<string>,
    _timerAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _liveness,
      _finderAddress,
      _timerAddress,
      overrides || {}
    );
  }
  override attach(address: string): SkinnyOptimisticOracleProd {
    return super.attach(address) as SkinnyOptimisticOracleProd;
  }
  override connect(signer: Signer): SkinnyOptimisticOracleProd__factory {
    return super.connect(signer) as SkinnyOptimisticOracleProd__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SkinnyOptimisticOracleProdInterface {
    return new utils.Interface(_abi) as SkinnyOptimisticOracleProdInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SkinnyOptimisticOracleProd {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SkinnyOptimisticOracleProd;
  }
}
